{"version":3,"sources":["components/BigLogo.js","components/SplashButton.js","components/SplashButtons.js","components/SplashScreen.js","components/SelectionButton.js","components/SelectionScreen.js","components/CardsScreen.js","components/CardPanel.js","components/PlayerPanel.js","components/PlayersSection.js","components/CardHighlightScreen.js","components/FinalJeopardyScreen.js","App.js","index.js"],"names":["BigLogo","state","style","bigLogoContainerStyle","bigLogoOverlayStyle","bigLogoStyle","src","alt","React","Component","display","justifyContent","alignItems","width","background","height","zIndex","position","top","SplashButton","handleClick","props","onClick","buttonStyle","this","isMiddle","middleButtonStyle","normalButtonStyle","label","className","to","linkUrl","textDecoration","fontSize","fontWeight","letterSpacing","paddingTop","paddingBottom","paddingLeft","paddingRight","color","cursor","marginLeft","marginRight","SplashButtons","splashButtonsStyle","flexDirection","SplashScreen","splashStyle","SelectionButton","selectionButtonStyle","selectionLinkStyle","borderStyle","borderWidth","borderRadius","textTransform","marginTop","marginBottom","SelectionScreen","selectionScreenStyle","flexGrow","CardsScreen","renderCategories","jeopardyData","Fragment","map","value","index","key","categoryID","category","onCardClick","completed","cardData","setCurrentCard","call","renderCards","retVal","questionCount","cards","length","i","j","classNameComplete","push","cardID","bind","points","cardsScreenStyle","cardsGridStyle","gridTemplateColumns","gridTemplateRows","padding","columnGap","rowGap","PlayerPanel","handleChange","e","console","log","playerID","updatePoints","target","playerName","playerPoints","pointsStyle","pointsBaseStyle","currentHighest","sameScores","playerPanelContainerStyle","playerPanelStyle","panelTextStyle","onChange","pointsPanelStyle","increasePoints","plusButtonStyle","minusButtonStyle","maxWidth","textAlign","pointsButtonStyle","borderColor","userSelect","PlayersSection","players","playerList","slice","playerSectionStyle","data","playerId","widht","CardHighlightScreen","revealed","revealAnswer","setState","setCurrentCardRevealed","currentCard","answerStyle","answerShownStyle","answerHiddenStyle","scoreStyle","cardHighlightScreenStyle","cardContainerStyle","cardContentsStyle","cardInfoStyle","cardQuestionStyle","cardQuestionTextStyle","answer","question","cardRevealStyle","maxHeight","opacity","borderTopStyle","borderTopWidth","borderTopColor","transitionProperty","transitionDuration","transitionTimingFunction","overflow","finalJeopardyScreenStyle","ID","chr4","Math","random","toString","App","dailyDouble","regularJeopardyData","doubleJeopardyData","finalCard","stateCopy","regularJeopardyDataCopy","doubleJeopardyDataCopy","id","newPlayerList","newPoints","parseInt","isNaN","playerIndex","findIndex","subtract","renderPlayers","atEnter","atLeave","atActive","exact","path","pageStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8bc5672.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass BigLogo extends React.Component\r\n{\r\n  state = {\r\n    \r\n  }\r\n  \r\n  render()\r\n  {\r\n    return (\r\n      \r\n      <div style={bigLogoContainerStyle}>\r\n\r\n        <div style={bigLogoOverlayStyle}> \r\n      \r\n          <img \r\n            style={bigLogoStyle}\r\n            src=\"./images/big-logo.png\" \r\n            alt=\"Tipsy Jeopardy Big Logo\"\r\n          />\r\n      \r\n        </div>\r\n\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nconst bigLogoContainerStyle = {\r\n\r\n  display: 'flex',\r\n  \r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  \r\n  width: '100%',\r\n}\r\n\r\nconst bigLogoOverlayStyle = {\r\n  \r\n  background: 'rgba(0,0,0,0.3)',\r\n  width: '100vw',\r\n  height: '20vh',\r\n  \r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n}\r\n\r\nconst bigLogoStyle = {\r\n  \r\n  width: '100vh',\r\n  zIndex: '1',\r\n  position: 'relative',\r\n  top: '-7vh',\r\n}\r\n\r\nexport default BigLogo;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport '../animations.css';\r\n\r\nclass SplashButton extends React.Component\r\n{\r\n  state = {\r\n    \r\n  }\r\n  \r\n  handleClick = () => {\r\n    this.props.onClick();\r\n  }\r\n\r\n  render()\r\n  {\r\n    const buttonStyle = \r\n          this.props.isMiddle ?\r\n          middleButtonStyle :\r\n          normalButtonStyle;\r\n    \r\n    const label = this.props.label;\r\n    \r\n    return (\r\n      \r\n      <div \r\n        className='floating' \r\n        style={buttonStyle} \r\n        onClick={this.handleClick}>\r\n      \r\n        <Link \r\n          to={this.props.linkUrl}\r\n          style={{textDecoration: 'none'}}\r\n          className='splash-button-text'>\r\n            {label}\r\n        </Link>\r\n      \r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nconst verticalPadding = '2vw'\r\nconst horizontalPadding = '8vw';\r\n\r\nconst buttonWidth = '10vw';\r\nconst middleMargin = '12px';\r\n\r\nconst normalButtonStyle = {\r\n   \r\n  fontSize: '2.5em',\r\n  fontWeight: 'bold',\r\n\r\n  letterSpacing: '2px',\r\n  \r\n  display: 'flex',\r\n  \r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  \r\n  paddingTop: verticalPadding,\r\n  paddingBottom: verticalPadding,\r\n  paddingLeft: horizontalPadding,\r\n  paddingRight: horizontalPadding,\r\n  \r\n  /*\r\n  borderStyle: 'solid',\r\n  borderWidth: '2px',\r\n  borderRadius: '5px',\r\n  borderColor: 'rgba(255, 255, 255, 1)',\r\n  \r\n  background: '#2b26b5',\r\n  */\r\n  \r\n  color: 'rgba(255, 255, 255, 0.75)',\r\n  cursor: 'pointer',\r\n  \r\n  position: 'relative',\r\n  \r\n  textDecoration: 'none',\r\n}\r\n\r\nconst middleButtonStyle = {\r\n           \r\n  marginLeft: middleMargin,\r\n  marginRight: middleMargin,\r\n  \r\n  ...normalButtonStyle,\r\n}\r\n  \r\nexport default SplashButton;\r\n","import React from 'react';\r\nimport SplashButton from '../components/SplashButton';\r\n\r\nclass SplashButtons extends React.Component\r\n{\r\n  state = {\r\n    \r\n  }\r\n  \r\n  render()\r\n  {\r\n    return (\r\n      <div style={splashButtonsStyle}>\r\n        <SplashButton \r\n          label=\"PLAY NOW\" \r\n          linkUrl=\"/jeopardy/selection\"\r\n          onClick={this.props.onClick} \r\n          />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst splashButtonsStyle = {\r\n                            \r\n  display: 'flex',\r\n  flexDirection: 'flex-row'\r\n  \r\n}\r\n\r\nexport default SplashButtons;\r\n","import React from 'react';\r\nimport BigLogo from '../components/BigLogo';\r\nimport SplashButtons from '../components/SplashButtons';\r\n\r\nclass SplashScreen extends React.Component\r\n{\r\n  render()\r\n  {\r\n    return (\r\n      <div style={splashStyle}>\r\n        \r\n        <BigLogo />\r\n        <SplashButtons onClick={this.props.onClick} />\r\n      \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst splashStyle = {\r\n  height: '100vh',\r\n  width: '100vw',\r\n  \r\n  display: 'flex',\r\n  \r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  \r\n  flexDirection: 'column',\r\n}\r\n\r\nexport default SplashScreen;\r\n","import React from 'react';\r\nimport { BrowserRouter, Link} from 'react-router-dom';\r\n\r\nimport '../animations.css';\r\n\r\nclass SelectionButton extends React.Component\r\n{\r\n  render()\r\n  {\r\n    const label = this.props.label;\r\n    const buttonStyle =\r\n          this.props.isMiddle ? \r\n          middleButtonStyle :\r\n          selectionButtonStyle;\r\n    \r\n    return (\r\n      <div> \r\n        <Link \r\n          className='selection-button'\r\n          style={buttonStyle}\r\n          to={this.props.linkUrl}  \r\n          > \r\n          <p style={selectionLinkStyle}>{label}</p>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst spacingHeight = '2vw';\r\n\r\nconst paddingHorizontal = '2vh';\r\nconst paddingVertical = '2vw';\r\n\r\nconst selectionButtonStyle = \r\n{\r\n  background: 'rgba(43, 38, 181, 1)',\r\n  \r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  \r\n  borderStyle: 'solid',\r\n  borderWidth: '3px',\r\n  borderRadius: '10px',\r\n  \r\n  textDecoration: 'none',\r\n  textTransform: 'uppercase',\r\n  letterSpacing: '1px',\r\n  \r\n  paddingTop: paddingVertical,\r\n  paddingBottom: paddingVertical,\r\n  paddingLeft: paddingHorizontal,\r\n  paddingRight: paddingHorizontal,\r\n}\r\n\r\nconst middleButtonStyle = \r\n{\r\n  marginTop: spacingHeight,\r\n  marginBottom: spacingHeight,\r\n  \r\n  ...selectionButtonStyle\r\n}\r\n\r\nconst selectionLinkStyle = \r\n{\r\n  textDecoration: 'none',\r\n  fontSize: '1em'\r\n}\r\n\r\nexport default SelectionButton;","import React from 'react';\r\nimport SelectionButton from '../components/SelectionButton';\r\n\r\nclass SelectionScreen extends React.Component\r\n{\r\n  render()\r\n  {\r\n    return (\r\n      <div style={selectionScreenStyle}> \r\n        <SelectionButton\r\n          label=\"Regular Jeopardy\"\r\n          linkUrl=\"/jeopardy/regular\"\r\n        />\r\n        <SelectionButton\r\n          label=\"Double Jeopardy\"\r\n          isMiddle='true'\r\n          linkUrl=\"/jeopardy/double\"\r\n        />\r\n        <SelectionButton\r\n          label=\"Final Jeopardy\"\r\n          linkUrl=\"/jeopardy/final\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst selectionScreenStyle = \r\n{\r\n  width: '100vw',\r\n  \r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  \r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  \r\n  flexGrow: 1,\r\n}\r\n\r\nexport default SelectionScreen;","import React from 'react';\r\nimport { BrowserRouter, Link} from 'react-router-dom';\r\n\r\nimport \"../App.css\";\r\nimport CardPanel from '../components/CardPanel';\r\n\r\nclass CardsScreen extends React.Component\r\n{\r\n  renderCategories = () => {\r\n    \r\n    const jeopardyData = this.props.jeopardyData;\r\n    \r\n    return (\r\n      <React.Fragment>\r\n        {jeopardyData.map((value, index) => (\r\n         <div key={value.categoryID} className=\"cell cell-category\">{value.category}</div>\r\n        ))}\r\n      </React.Fragment>\r\n    )\r\n  };\r\n  \r\n  onCardClick = (completed, cardData, category) => {\r\n    \r\n    if(!completed)\r\n      this.props.setCurrentCard.call(this, cardData, category);\r\n  }\r\n\r\n  renderCards = () => {\r\n    \r\n    var retVal = [];\r\n    var jeopardyData = this.props.jeopardyData;\r\n    \r\n    const questionCount = jeopardyData[0].cards.length;\r\n    \r\n    for(var i = 0; i < questionCount; i++)\r\n    {\r\n      var cardIndex = i + 1;\r\n\r\n      for(var j = 0; j < 3; j++)\r\n      {\r\n        var cardData = jeopardyData[j].cards[i];\r\n\r\n        var completed = cardData.completed;\r\n        \r\n        var classNameComplete = \"cell \" + (completed ? \"cell-card-completed\" : \"cell-card\"); \r\n        \r\n        retVal.push(\r\n          <Link \r\n            to={completed ? '#' : '/jeopardy/card'}\r\n            key={cardData.cardID}\r\n            onClick={this.onCardClick.bind(this, completed, cardData, jeopardyData[j].category)}\r\n            className={classNameComplete}>\r\n            {cardData.points}\r\n          </Link>\r\n        )\r\n      }\r\n    }\r\n    \r\n    return (\r\n      <React.Fragment>\r\n       {retVal}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  render()\r\n  {\r\n    return (\r\n      <div style={cardsScreenStyle}>\r\n        <div style={cardsGridStyle}>\r\n          {this.renderCategories()}\r\n          {this.renderCards()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst cardsScreenStyle = \r\n{\r\n  width: '100vw',\r\n  \r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  \r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  \r\n  flexGrow: 1,\r\n}\r\n\r\nconst gridGap = '8px';\r\n\r\nconst cardsGridStyle = \r\n{\r\n  display: 'grid',\r\n  \r\n  gridTemplateColumns: 'repeat(3, 1fr)',\r\n  gridTemplateRows: 'repeat(6, 1fr)',\r\n  \r\n  borderRadius: '10px',\r\n  \r\n  padding: gridGap,\r\n  \r\n  columnGap: gridGap,\r\n  rowGap: gridGap,\r\n  \r\n  width: '80vh',\r\n  height: '80%',\r\n  \r\n  background: 'rgba(255, 255, 255,0.25)',\r\n}\r\n\r\nexport default CardsScreen;","import React from 'react';\r\nimport { BrowserRouter, Link} from 'react-router-dom';\r\n\r\nclass CardPanel extends React.Component\r\n{\r\n  render()\r\n  {\r\n    return (\r\n      <div> \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardPanel;","import React from 'react';\r\n\r\nclass PlayerPanel extends React.Component\r\n{\r\n  handleChange = (e) => {\r\n    console.log(this.props.playerID);\r\n    this.props.updatePoints.call(this, this.props.playerID, e.target.value);\r\n  }\r\n  \r\n  render()\r\n  {\r\n    const playerName = this.props.playerName;\r\n    const points = this.props.playerPoints;\r\n    \r\n    var pointsStyle = pointsBaseStyle;\r\n    \r\n    if(this.props.playerPoints === this.props.currentHighest && !this.props.sameScores)\r\n    {\r\n      pointsStyle = {\r\n        \r\n        ...pointsBaseStyle,\r\n        color: 'rgba(0, 200, 0, 1)',\r\n      }\r\n    }\r\n    \r\n    return (\r\n      <div className='player-panel' style={playerPanelContainerStyle}> \r\n        <div style={playerPanelStyle}>\r\n          <p style={panelTextStyle}>{this.props.playerName}</p>\r\n          <input style={pointsStyle} onChange={this.handleChange.bind(this)} value={this.props.playerPoints}></input>\r\n          <div style={pointsPanelStyle}>\r\n            <div\r\n              className='points-button'\r\n              onClick={this.props.increasePoints.bind(this, this.props.playerID, false)}\r\n              style={plusButtonStyle}\r\n              >\r\n              +\r\n            </div>\r\n            <div\r\n              className='points-button'\r\n              onClick={this.props.increasePoints.bind(this, this.props.playerID, true)}\r\n              style={minusButtonStyle}\r\n              >\r\n              -\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst panelMargin = '10px';\r\n\r\nconst playerPanelContainerStyle = {\r\n  \r\n  marginLeft: panelMargin,\r\n  marginRight: panelMargin,\r\n  \r\n  padding: '10px',\r\n  \r\n  background: 'rgba(255, 255, 255, 1)',\r\n  borderRadius: '10px 10px 0px 0px',\r\n  \r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  justifyContent: 'center',\r\n  \r\n  flexGrow: '1',\r\n  \r\n  maxWidth: '20vh',\r\n}\r\n\r\nconst playerPanelStyle = {\r\n  \r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n}\r\n\r\nconst panelTextStyle = {\r\n  \r\n  fontSize: '1.25em',\r\n  marginBottom: '5px',\r\n  \r\n  textAlign: 'center',\r\n}\r\n\r\nconst pointsBaseStyle = {\r\n  \r\n  ...panelTextStyle,\r\n  width: '55%'\r\n}\r\n\r\nconst pointsPanelStyle = {\r\n  \r\n  width: '75%',\r\n  paddingTop: '5px',\r\n  \r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  justifyContent: 'space-around',\r\n  alignItems: 'center',\r\n  \r\n}\r\n\r\nconst pointsButtonStyle = {\r\n  \r\n  padding: '5px',\r\n  fontSize: '2em',\r\n  cursor: 'pointer',\r\n  \r\n  width: '3vh',\r\n  height: '2vh',\r\n  \r\n  borderStyle: 'solid',\r\n  borderColor: 'rgba(128, 128, 128, 1)',\r\n  \r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  \r\n  userSelect: 'none'\r\n}\r\n\r\nconst plusButtonStyle = {\r\n  \r\n  color: 'rgba(0, 200, 0, 1)',\r\n  \r\n  ...pointsButtonStyle,\r\n  \r\n}\r\n\r\nconst minusButtonStyle = {\r\n  \r\n  color: 'rgba(200, 0, 0, 1)',\r\n  \r\n  ...pointsButtonStyle,\r\n  \r\n}\r\n\r\nexport default PlayerPanel;","import React from 'react';\r\nimport PlayerPanel from '../components/PlayerPanel'\r\n\r\nclass PlayersSection extends React.Component\r\n{ \r\n  render()\r\n  {\r\n    const players = this.props.playerList.slice();\r\n    \r\n    var currentHighest = -1000000000;\r\n    \r\n    for(var i in players)\r\n    {\r\n      var points = players[i].playerPoints;\r\n      \r\n      if(points > currentHighest)\r\n      {\r\n        currentHighest = points;\r\n      }\r\n    }\r\n    \r\n    return (\r\n      <div style={playerSectionStyle}> \r\n        {players.map((data) => (\r\n         <PlayerPanel \r\n          key={data.playerId}\r\n          increasePoints={this.props.increasePoints}\r\n          updatePoints={this.props.updatePoints}\r\n          playerID={data.playerId}\r\n          playerName={data.playerName}\r\n          playerPoints={data.playerPoints}\r\n          currentHighest={currentHighest}\r\n         />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst sectionPadding = '10px';\r\n\r\nconst playerSectionStyle =\r\n{\r\n  height: '125px',\r\n  widht: '100%',\r\n  //background: 'rgba(0,0,0,0.5)',\r\n  \r\n  paddingLeft: sectionPadding,\r\n  paddingRight: sectionPadding,\r\n  \r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  \r\n  justifyContent: 'center',\r\n}\r\n\r\nexport default PlayersSection;","import React from 'react';\r\nimport { BrowserRouter, Link} from 'react-router-dom';\r\n\r\nimport '../App.css';\r\n\r\nclass CardHighlightScreen extends React.Component\r\n{\r\n  state = {\r\n    revealed: false\r\n  }\r\n  \r\n  revealAnswer = (e) => {\r\n    \r\n    this.setState({\r\n      revealed: !this.state.revealed\r\n    })\r\n    \r\n    this.props.setCurrentCardRevealed();\r\n  };\r\n\r\n  render()\r\n  {\r\n    var currentCard = this.props.currentCard;\r\n    \r\n    var answerStyle = !this.state.revealed ? answerHiddenStyle : answerShownStyle;\r\n    \r\n    const scoreStyle = currentCard.points > 0 ? \r\n      {\r\n        fontSize: '1.5em',\r\n        display: 'flex'\r\n      } : \r\n      {\r\n        display: 'none'\r\n      }\r\n    \r\n    return (\r\n      <div style={cardHighlightScreenStyle}> \r\n        <div style={cardContainerStyle}>\r\n          <div style={cardContentsStyle}> \r\n            <div style={cardInfoStyle}>\r\n              <p style={{fontSize: '1.5em'}}>{currentCard.category}</p>\r\n              <p style={scoreStyle}>{currentCard.points}</p>\r\n            </div>\r\n            <div className=\"card-question\" style={cardQuestionStyle}> \r\n              <p style={cardQuestionTextStyle}>{currentCard.answer}</p>\r\n              <p style={answerStyle}>{currentCard.question}</p>\r\n            </div>\r\n            <div className='reveal-label' style={cardRevealStyle}>\r\n              <p onClick={this.revealAnswer.bind(this)} style={{cursor: 'pointer'}}>Click to reveal the answer!</p>  \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst cardHighlightScreenStyle = \r\n{\r\n  width: '100vw',\r\n  \r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  \r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  \r\n  flexGrow: '1',\r\n}\r\n\r\nconst cardContainerStyle = \r\n{\r\n  height: '55vh',\r\n  width: '80vh',\r\n  \r\n  background: 'rgba(20, 25, 128, 0.85)',\r\n  \r\n  borderRadius: '25px',\r\n  \r\n  padding: '2.5vh',\r\n  \r\n  display: 'flex',\r\n  \r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n}\r\n\r\nconst cardContentsStyle =\r\n{\r\n  width: '100%',\r\n  height: '100%',\r\n  \r\n  background: 'rgba(43, 38, 181, 0.85)',\r\n  \r\n  borderRadius: '20px',\r\n  borderStyle: 'solid',\r\n  borderColor: 'rgba(80, 60, 200, 0.85)',\r\n  \r\n  display: 'grid',\r\n  \r\n  gridTemplateRows: '2fr 7fr 1fr',\r\n  \r\n  color: 'rgba(255, 255, 255, 1)',\r\n}\r\n\r\nconst cardInfoStyle =\r\n{\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  \r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n}\r\n\r\nconst cardQuestionStyle =\r\n{\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  \r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n}\r\n\r\nconst cardRevealStyle =\r\n{ \r\n  display: 'flex',\r\n  \r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n}\r\n\r\nconst cardQuestionTextStyle =\r\n{\r\n  width: '90%',\r\n  \r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  \r\n  textAlign: 'center',\r\n}\r\n\r\nconst answerHiddenStyle = \r\n{\r\n  width: '90%',\r\n  \r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  \r\n  marginTop: '0px',\r\n  paddingTop: '0px',\r\n  \r\n  maxHeight: '0px',\r\n  opacity: '0',\r\n  \r\n  textAlign: 'center',\r\n  \r\n  borderTopStyle: 'solid',\r\n  borderTopWidth: '1px',\r\n  borderTopColor: 'rgba(255, 255, 255, 1)',\r\n  \r\n  transitionProperty: 'all',\r\n  transitionDuration: '0.5s',\r\n  transitionTimingFunction: 'ease-in-out',\r\n  \r\n  overflow: 'hidden',\r\n}\r\n\r\nconst answerShownStyle = \r\n{\r\n  width: '90%',\r\n  \r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  \r\n  marginTop: '15px',\r\n  paddingTop: '15px',\r\n  \r\n  maxHeight: '100%',\r\n  opacity: '1',\r\n  \r\n  textAlign: 'center',\r\n  \r\n  borderTopStyle: 'solid',\r\n  borderTopWidth: '1px',\r\n  borderTopColor: 'rgba(255, 255, 255, 1)',\r\n  \r\n  transitionProperty: 'all',\r\n  transitionDuration: '0.5s',\r\n  transitionTimingFunction: 'ease-in-out',\r\n  \r\n  overflow: 'hidden',\r\n}\r\n\r\nexport default CardHighlightScreen;","import React from 'react';\r\nimport { BrowserRouter, Link} from 'react-router-dom';\r\n\r\nclass FinalJeopardyScreen extends React.Component\r\n{\r\n  render()\r\n  {\r\n    return (\r\n      <div style={finalJeopardyScreenStyle}> \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst finalJeopardyScreenStyle = \r\n{\r\n  width: '100vw',\r\n  \r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  \r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  \r\n  flexGrow: 1,\r\n}\r\n\r\nexport default FinalJeopardyScreen;","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { AnimatedSwitch } from 'react-router-transition';\n\nimport './App.css';\n\nimport SplashScreen from './components/SplashScreen';\nimport SelectionScreen from './components/SelectionScreen';\nimport CardsScreen from './components/CardsScreen';\nimport PlayersSection from './components/PlayersSection';\nimport CardHighlightScreen from './components/CardHighlightScreen';\nimport FinalJeopardyScreen from './components/FinalJeopardyScreen';\n\nfunction ID(){\n  \n  function chr4(){\n    return Math.random().toString(16).slice(-4);\n  }\n  \n  return chr4() + chr4() +\n    '-' + chr4() +\n    '-' + chr4() +\n    '-' + chr4() +\n    '-' + chr4() + chr4() + chr4();\n}\n\nclass App extends React.Component\n{\n  state = {\n    playerList: [\n      {\n        playerId: ID(),\n        playerName: 'Tup',\n        playerPoints: 0,\n      },\n      {\n        playerId: ID(),\n        playerName: 'Fiel',\n        playerPoints: 0,\n      },\n      {\n        playerId: ID(),\n        playerName: 'Nikki',\n        playerPoints: 0,\n      },\n    ],\n    \n    currentCard: {\n      cardID: ID(),\n      answer: 'a joke',\n      question: 'what is \"my life?\"',\n      points: 100,\n      dailyDouble: false,\n      completed: false,\n      category: 'Sad Jokes',\n    },\n    \n    regularJeopardyData: [\n      {\n        categoryID: ID(),\n        category: \"MCU Characters\",\n        cards: [\n          {\n            cardID: ID(),\n            answer: 'His famous phrase is \"Wakanda Forever.\"',\n            question: 'Who is Black Panther?',\n            points: 100,\n            dailyDouble: false,\n            completed: false,\n          },\n          {\n            cardID: ID(),\n            answer: \"She was the only other character in the MCU who was able to wear Ironman's suit, other than James Rhodes.\",\n            question: 'Who is Pepper Potts?',\n            points: 200,\n            dailyDouble: false,\n            completed: false,\n          },\n          {\n            cardID: ID(),\n            answer: 'She is 1 of the 2 only other original Avenger, in the MCU, who have yet to have their own movie released.',\n            question: 'Who is Black Widow?',\n            points: 300,\n            dailyDouble: false,\n            completed: false,\n          },\n          {\n            cardID: ID(),\n            answer: 'He is one of the twins who gained their powers through experimentations conducted by HYDRA.',\n            question: 'Who is Quicksilver?',\n            points: 400,\n            dailyDouble: false,\n            completed: false,\n          },\n          {\n            cardID: ID(),\n            answer: 'This minor villain in the movie \"Captain America: Civil War\" was a S.H.I.E.L.D agent, and an undercover HYDRA combatant who, in a previous movie, was almost crushed to death in their fight with Falcon.',\n            question: 'Who is Crossbones?',\n            points: 500,\n            dailyDouble: false,\n            completed: false,\n          },\n        ]\n      },\n      {\n        categoryID: ID(),\n        category: \"Sad Boi Music\",\n        cards: [\n          {\n            cardID: ID(),\n            answer: 'This Sam Smith song is about distancing yourself from someone because you know you always end up getting hurt. He sings about how easy it is to say farewell to someone.',\n            question: 'What is \"Too Good At Goodbyes\" by Sam Smith?',\n            points: 100,\n            dailyDouble: false,\n            completed: false,\n          },\n          {\n            cardID: ID(),\n            answer: \"This song was made for people who were struggling in life and were looking for a way out. It's title is a series of number, which makes up the phone number of a help hotline in the United States.\",\n            question: 'What is \"1-800-273-8255\" (The Suicide Song) by Logic?',\n            points: 200,\n            dailyDouble: true,\n            completed: false,\n          },\n          {\n            cardID: ID(),\n            answer: 'This song was trending on tiktok, when people were using in their videos of trying to spin around while seated on the floor, pretending to be in a microwave.',\n            question: 'What is \"Slow Dancing in the Dark\" by Joji?',\n            points: 300,\n            dailyDouble: false,\n            completed: false,\n          },\n          {\n            cardID: ID(),\n            answer: 'This song is about someone who had gone through a break up. The title features a city in California and a certain time of the day.',\n            question: 'What is \"Malibu Nights\" by LANY?',\n            points: 400,\n            dailyDouble: false,\n            completed: false,\n          },\n          {\n            cardID: ID(),\n            answer: \"This blond song's title is taken from it's hook, which highlights having rough nights. The artists sings about moving to Houston, and dating after the Hurricane Katrina.\",\n            question: 'What is \"Nights\" by Frank Ocean?',\n            points: 500,\n            dailyDouble: false,\n            completed: false,\n          },\n        ]\n      },\n      {\n        categoryID: ID(),\n        category: \"Switch Games\",\n        cards: [\n          {\n            cardID: ID(),\n            answer: 'This critically-acclaimed game allows you to customize your island and develop a community with a bunch of unique anthropomorphic creature characters.',\n            question: 'What is Animal Crossing: New Horizons?',\n            points: 100,\n            dailyDouble: false,\n            completed: false,\n          },\n          {\n            cardID: ID(),\n            answer: 'This 3rd person shooter is a sequel to a Wii U original game, where you play as Squid-like characters.',\n            question: 'What is Splatoon 2?',\n            points: 200,\n            dailyDouble: false,\n            completed: false,\n          },\n          {\n            cardID: ID(),\n            answer: 'This game, which consists of multiple mini games, was released to extensively showcase the capabilities of the Joy-Cons.',\n            question: 'What is 1-2-Switch?',\n            points: 300,\n            dailyDouble: false,\n            completed: false,\n          },\n          {\n            cardID: ID(),\n            answer: \"The trees in this game were compared to the trees found in Pokemon Sword and Shield because people were disappointed in how the new Pokemon game's 3d models looked.\",\n            question: 'What is The Legend of Zelda: Breath of the Wild?',\n            points: 400,\n            dailyDouble: false,\n            completed: false,\n          },\n          {\n            cardID: ID(),\n            answer: 'This game literally makes you exercise with a plastic ring in order to play it.',\n            question: 'What is Ring Fit Adventure?',\n            points: 500,\n            dailyDouble: false,\n            completed: false,\n          },\n        ]\n      },\n    ],\n    \n    doubleJeopardyData: [\n      {\n        categoryID: ID(),\n        category: \"MCU Characters\",\n        cards: [\n          {\n            cardID: ID(),\n            answer: 'His famous phrase is \"Wakanda Forever.\"',\n            question: 'Who is Black Panther?',\n            points: 200,\n            dailyDouble: false,\n            completed: false,\n          },\n          {\n            cardID: ID(),\n            answer: \"She was the only other character in the MCU who was able to wear Ironman's suit, other than James Rhodes.\",\n            question: 'Who is Pepper Potts?',\n            points: 400,\n            dailyDouble: false,\n            completed: false,\n          },\n          {\n            cardID: ID(),\n            answer: 'She is 1 of the 2 only other original Avenger, in the MCU, who have yet to have their own movie released.',\n            question: 'Who is Black Widow?',\n            points: 600,\n            dailyDouble: false,\n            completed: false,\n          },\n          {\n            cardID: ID(),\n            answer: 'He is one of the twins who gained their powers through experimentations conducted by HYDRA.',\n            question: 'Who is Quicksilver?',\n            points: 800,\n            dailyDouble: false,\n            completed: false,\n          },\n          {\n            cardID: ID(),\n            answer: 'This minor villain in the movie \"Captain America: Civil War\" was a S.H.I.E.L.D agent, and an undercover HYDRA combatant who, in a previous movie, was almost crushed to death in their fight with Falcon.',\n            question: 'Who is Crossbones?',\n            points: 1000,\n            dailyDouble: false,\n            completed: false,\n          },\n        ]\n      },\n      {\n        categoryID: ID(),\n        category: \"Sad Boi Music\",\n        cards: [\n          {\n            cardID: ID(),\n            answer: 'This Sam Smith song is about distancing yourself from someone because you know you always end up getting hurt. He sings about how easy it is to say farewell to someone.',\n            question: 'What is \"Too Good At Goodbyes\" by Sam Smith?',\n            points: 200,\n            dailyDouble: false,\n            completed: false,\n          },\n          {\n            cardID: ID(),\n            answer: \"This song was made for people who were struggling in life and were looking for a way out. It's title is a series of number, which makes up the phone number of a help hotline in the United States.\",\n            question: 'What is \"1-800-273-8255\" (The Suicide Song) by Logic?',\n            points: 400,\n            dailyDouble: true,\n            completed: false,\n          },\n          {\n            cardID: ID(),\n            answer: 'This song was trending on tiktok, when people were using in their videos of trying to spin around while seated on the floor, pretending to be in a microwave.',\n            question: 'What is \"Slow Dancing in the Dark\" by Joji?',\n            points: 600,\n            dailyDouble: false,\n            completed: false,\n          },\n          {\n            cardID: ID(),\n            answer: 'This song is about someone who had gone through a break up. The title features a city in California and a certain time of the day.',\n            question: 'What is \"Malibu Nights\" by LANY?',\n            points: 800,\n            dailyDouble: false,\n            completed: false,\n          },\n          {\n            cardID: ID(),\n            answer: \"This blond song's title is taken from it's hook, which highlights having rough nights. The artists sings about moving to Houston, and dating after the Hurricane Katrina.\",\n            question: 'What is \"Nights\" by Frank Ocean?',\n            points: 1000,\n            dailyDouble: false,\n            completed: false,\n          },\n        ]\n      },\n      {\n        categoryID: ID(),\n        category: \"Switch Games\",\n        cards: [\n          {\n            cardID: ID(),\n            answer: 'This critically-acclaimed game allows you to customize your island and develop a community with a bunch of unique anthropomorphic creature characters.',\n            question: 'What is Animal Crossing: New Horizons?',\n            points: 200,\n            dailyDouble: false,\n            completed: false,\n          },\n          {\n            cardID: ID(),\n            answer: 'This 3rd person shooter is a sequel to a Wii U original game, where you play as Squid-like characters.',\n            question: 'What is Splatoon 2?',\n            points: 400,\n            dailyDouble: false,\n            completed: false,\n          },\n          {\n            cardID: ID(),\n            answer: 'This game, which consists of multiple mini games, was released to extensively showcase the capabilities of the Joy-Cons.',\n            question: 'What is 1-2-Switch?',\n            points: 600,\n            dailyDouble: false,\n            completed: false,\n          },\n          {\n            cardID: ID(),\n            answer: \"The trees in this game were compared to the trees found in Pokemon Sword and Shield because people were disappointed in how the new Pokemon game's 3d models looked.\",\n            question: 'What is The Legend of Zelda: Breath of the Wild?',\n            points: 800,\n            dailyDouble: false,\n            completed: false,\n          },\n          {\n            cardID: ID(),\n            answer: 'This game literally makes you exercise with a plastic ring in order to play it.',\n            question: 'What is Ring Fit Adventure?',\n            points: 1000,\n            dailyDouble: false,\n            completed: false,\n          },\n        ]\n      },\n    ],\n    \n    finalCard: {\n      cardID: ID(),\n      answer: '1 + 1',\n      question: 'What is 4?',\n      points: 0,\n      dailyDouble: false,\n      completed: false,\n      category: 'Final Jeopardy',\n    },\n  }\n  \n  setCurrentCard = (cardData, category) => {\n    \n    const { stateCopy } = this.state;\n    this.setState({\n      ...stateCopy,\n      currentCard: {...cardData, category}\n    });\n  }\n\n  setCurrentCardRevealed = () => \n  {\n    const cardID = this.state.currentCard.cardID;\n    \n    const { stateCopy } = this.state;\n    \n    const regularJeopardyDataCopy = this.state.regularJeopardyData;\n    const doubleJeopardyDataCopy = this.state.doubleJeopardyData;\n    \n    for(var i = 0; i < regularJeopardyDataCopy.length; i++)\n    {\n      for(var j = 0; j < regularJeopardyDataCopy[i].cards.length; j++)\n      {\n        if(regularJeopardyDataCopy[i].cards[j].cardID === cardID)\n        {\n          regularJeopardyDataCopy[i].cards[j].completed = true;\n        }\n      }\n    }\n    \n    for(var i = 0; i < doubleJeopardyDataCopy.length; i++)\n    {\n      for(var j = 0; j < doubleJeopardyDataCopy[i].cards.length; j++)\n      {\n        if(doubleJeopardyDataCopy[i].cards[j].cardID === cardID)\n        {\n          doubleJeopardyDataCopy[i].cards[j].completed = true;\n        }\n      }\n    }\n    \n    this.setState({\n      ...stateCopy,\n      regularJeopardyData: regularJeopardyDataCopy,\n      doubleJeopardyData: doubleJeopardyDataCopy,\n    })\n    \n    console.log(\"Current card revealed!\");\n  }\n  \n  handleClick = (e) => {\n    console.log(\"Hello\");\n  };\n\n  updatePoints = (id, value) => {\n    \n    const newPlayerList = this.state.playerList.slice();\n    var newPoints = parseInt(value, 10);\n\n    console.log(newPlayerList);\n    \n    if(isNaN(newPoints))\n      newPoints = 0;\n    \n    if(!isNaN(newPoints))\n    {\n      var playerIndex = newPlayerList.findIndex(data => data.playerId === id);\n\n      console.log(newPlayerList[playerIndex]);\n    \n      newPlayerList[playerIndex].playerPoints = newPoints;\n\n      this.setState(\n      {\n        playerList: newPlayerList\n      })\n    }\n    \n  }\n\n  increasePoints = (id, subtract) => { \n    \n    if(this.state.currentCard !== null)\n    {\n      const newPlayerList = this.state.playerList.slice();\n\n      var playerIndex = newPlayerList.findIndex(data => data.playerId === id);\n\n      newPlayerList[playerIndex].playerPoints += (\n        subtract ? \n        -this.state.currentCard.points :\n        this.state.currentCard.points\n      )\n\n      console.log(newPlayerList);\n\n      this.setState(\n      {\n        playerList: newPlayerList\n      })\n    }\n  }\n  \n  renderPlayers = () => {\n    \n    return (\n      <PlayersSection \n        playerList={this.state.playerList}\n        increasePoints={this.increasePoints}\n        updatePoints={this.updatePoints}\n      />\n    )\n  };\n\n  render()\n  {\n    return (\n   \n      <Router>\n      \n        <AnimatedSwitch\n          atEnter={{opacity:0}}\n          atLeave={{opacity:0}}\n          atActive={{opacity:1}}\n          className=\"switch-wrapper\"\n          >\n          \n          <Route exact path=\"/\">\n            <SplashScreen onClick={this.handleClick} /> \n          </Route>\n\n          <Route path=\"/jeopardy/selection\">\n            <div style={pageStyle} > \n              <SelectionScreen />  \n              {this.renderPlayers()}\n            </div>\n          </Route>\n\n          <Route path=\"/jeopardy/regular\">\n            <div style={pageStyle} > \n              <CardsScreen \n              jeopardyData={this.state.regularJeopardyData}\n              setCurrentCard={this.setCurrentCard}\n              />  \n              {this.renderPlayers()}\n            </div>\n          </Route>\n\n          <Route path=\"/jeopardy/double\">\n            <div style={pageStyle} > \n              <CardsScreen \n              jeopardyData={this.state.doubleJeopardyData}\n              setCurrentCard={this.setCurrentCard}\n              />  \n              {this.renderPlayers()}\n            </div>\n          </Route>\n\n          <Route path=\"/jeopardy/final\">\n            <div style={pageStyle} > \n              <CardHighlightScreen \n              currentCard={this.state.finalCard}\n              setCurrentCardRevealed={this.setCurrentCardRevealed}\n              />  \n              {this.renderPlayers()}\n            </div>\n          </Route>\n\n          <Route path=\"/jeopardy/card\">\n            <div style={pageStyle} > \n              <CardHighlightScreen \n              currentCard={this.state.currentCard}\n              setCurrentCardRevealed={this.setCurrentCardRevealed}\n              />  \n              {this.renderPlayers()}\n            </div>\n          </Route>\n\n        </AnimatedSwitch>\n\n      </Router>\n      \n    );\n  }\n}\n\nconst pageStyle = \n{\n  height: '100vh',\n  display: 'flex',\n  flexDirection: 'column'\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}