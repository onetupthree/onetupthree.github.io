{"version":3,"sources":["components/BigLogo.js","components/SplashButton.js","components/SplashButtons.js","components/SplashScreen.js","components/SelectionButton.js","components/SelectionScreen.js","components/CardsScreen.js","components/CardPanel.js","components/PlayerPanel.js","components/PlayersSection.js","components/CardHighlightScreen.js","components/FinalJeopardyScreen.js","App.js","index.js"],"names":["BigLogo","state","style","bigLogoContainerStyle","bigLogoOverlayStyle","bigLogoStyle","src","alt","React","Component","display","justifyContent","alignItems","width","background","height","zIndex","position","top","SplashButton","handleClick","props","onClick","buttonStyle","this","isMiddle","middleButtonStyle","normalButtonStyle","label","className","to","linkUrl","textDecoration","fontSize","fontWeight","letterSpacing","paddingTop","paddingBottom","paddingLeft","paddingRight","color","cursor","marginLeft","marginRight","SplashButtons","splashButtonsStyle","flexDirection","SplashScreen","splashStyle","SelectionButton","selectionButtonStyle","selectionLinkStyle","borderStyle","borderWidth","borderRadius","textTransform","marginTop","marginBottom","SelectionScreen","selectionScreenStyle","flexGrow","CardsScreen","renderCategories","jeopardyData","Fragment","map","value","index","key","categoryID","category","onCardClick","completed","cardData","setCurrentCard","call","renderCards","retVal","questionCount","cards","length","i","j","classNameComplete","push","cardID","bind","points","cardsScreenStyle","cardsGridStyle","gridTemplateColumns","gridTemplateRows","padding","columnGap","rowGap","PlayerPanel","handleChange","e","console","log","playerID","updatePoints","target","playerName","playerPoints","pointsStyle","pointsBaseStyle","currentHighest","sameScores","playerPanelContainerStyle","playerPanelStyle","panelTextStyle","onChange","pointsPanelStyle","increasePoints","plusButtonStyle","minusButtonStyle","maxWidth","textAlign","pointsButtonStyle","borderColor","userSelect","PlayersSection","players","playerList","slice","playerSectionStyle","data","playerId","widht","CardHighlightScreen","revealed","revealAnswer","setState","setCurrentCardRevealed","currentCard","dailyDouble","dailyDoubleTextStyle","opacity","answerStyle","answerShownStyle","answerHiddenStyle","answerBorderColor","borderTopColor","containerBackground","containerStyle","cardContainerStyle","contentsBackground","contentsBorderColor","contentsColor","contentsStyle","cardContentsStyle","scoreLabel","toString","cardHighlightScreenStyle","cardInfoStyle","cardQuestionStyle","cardQuestionTextStyle","answer","question","cardRevealStyle","maxHeight","borderTopStyle","borderTopWidth","transitionProperty","transitionDuration","transitionTimingFunction","overflow","finalJeopardyScreenStyle","ID","chr4","Math","random","App","regularJeopardyData","doubleJeopardyData","finalCard","stateCopy","regularJeopardyDataCopy","doubleJeopardyDataCopy","id","newPlayerList","newPoints","parseInt","isNaN","playerIndex","findIndex","subtract","multiplier","renderPlayers","atEnter","atLeave","atActive","exact","path","pageStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4bcde175.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass BigLogo extends React.Component\r\n{\r\n  state = {\r\n    \r\n  }\r\n  \r\n  render()\r\n  {\r\n    return (\r\n      \r\n      <div style={bigLogoContainerStyle}>\r\n\r\n        <div style={bigLogoOverlayStyle}> \r\n      \r\n          <img \r\n            style={bigLogoStyle}\r\n            src=\"./images/big-logo.png\" \r\n            alt=\"Tipsy Jeopardy Big Logo\"\r\n          />\r\n      \r\n        </div>\r\n\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nconst bigLogoContainerStyle = {\r\n\r\n  display: 'flex',\r\n  \r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  \r\n  width: '100%',\r\n}\r\n\r\nconst bigLogoOverlayStyle = {\r\n  \r\n  background: 'rgba(0,0,0,0.3)',\r\n  width: '100vw',\r\n  height: '20vh',\r\n  \r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n}\r\n\r\nconst bigLogoStyle = {\r\n  \r\n  width: '100vh',\r\n  zIndex: '1',\r\n  position: 'relative',\r\n  top: '-7vh',\r\n}\r\n\r\nexport default BigLogo;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport '../animations.css';\r\n\r\nclass SplashButton extends React.Component\r\n{\r\n  state = {\r\n    \r\n  }\r\n  \r\n  handleClick = () => {\r\n    this.props.onClick();\r\n  }\r\n\r\n  render()\r\n  {\r\n    const buttonStyle = \r\n          this.props.isMiddle ?\r\n          middleButtonStyle :\r\n          normalButtonStyle;\r\n    \r\n    const label = this.props.label;\r\n    \r\n    return (\r\n      \r\n      <div \r\n        className='floating' \r\n        style={buttonStyle} \r\n        onClick={this.handleClick}>\r\n      \r\n        <Link \r\n          to={this.props.linkUrl}\r\n          style={{textDecoration: 'none'}}\r\n          className='splash-button-text'>\r\n            {label}\r\n        </Link>\r\n      \r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nconst verticalPadding = '2vw'\r\nconst horizontalPadding = '8vw';\r\n\r\nconst buttonWidth = '10vw';\r\nconst middleMargin = '12px';\r\n\r\nconst normalButtonStyle = {\r\n   \r\n  fontSize: '2.5em',\r\n  fontWeight: 'bold',\r\n\r\n  letterSpacing: '2px',\r\n  \r\n  display: 'flex',\r\n  \r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  \r\n  paddingTop: verticalPadding,\r\n  paddingBottom: verticalPadding,\r\n  paddingLeft: horizontalPadding,\r\n  paddingRight: horizontalPadding,\r\n  \r\n  /*\r\n  borderStyle: 'solid',\r\n  borderWidth: '2px',\r\n  borderRadius: '5px',\r\n  borderColor: 'rgba(255, 255, 255, 1)',\r\n  \r\n  background: '#2b26b5',\r\n  */\r\n  \r\n  color: 'rgba(255, 255, 255, 0.75)',\r\n  cursor: 'pointer',\r\n  \r\n  position: 'relative',\r\n  \r\n  textDecoration: 'none',\r\n}\r\n\r\nconst middleButtonStyle = {\r\n           \r\n  marginLeft: middleMargin,\r\n  marginRight: middleMargin,\r\n  \r\n  ...normalButtonStyle,\r\n}\r\n  \r\nexport default SplashButton;\r\n","import React from 'react';\r\nimport SplashButton from '../components/SplashButton';\r\n\r\nclass SplashButtons extends React.Component\r\n{\r\n  state = {\r\n    \r\n  }\r\n  \r\n  render()\r\n  {\r\n    return (\r\n      <div style={splashButtonsStyle}>\r\n        <SplashButton \r\n          label=\"PLAY NOW\" \r\n          linkUrl=\"/jeopardy/selection\"\r\n          onClick={this.props.onClick} \r\n          />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst splashButtonsStyle = {\r\n                            \r\n  display: 'flex',\r\n  flexDirection: 'flex-row'\r\n  \r\n}\r\n\r\nexport default SplashButtons;\r\n","import React from 'react';\r\nimport BigLogo from '../components/BigLogo';\r\nimport SplashButtons from '../components/SplashButtons';\r\n\r\nclass SplashScreen extends React.Component\r\n{\r\n  render()\r\n  {\r\n    return (\r\n      <div style={splashStyle}>\r\n        \r\n        <BigLogo />\r\n        <SplashButtons onClick={this.props.onClick} />\r\n      \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst splashStyle = {\r\n  height: '100vh',\r\n  width: '100vw',\r\n  \r\n  display: 'flex',\r\n  \r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  \r\n  flexDirection: 'column',\r\n}\r\n\r\nexport default SplashScreen;\r\n","import React from 'react';\r\nimport { BrowserRouter, Link} from 'react-router-dom';\r\n\r\nimport '../animations.css';\r\n\r\nclass SelectionButton extends React.Component\r\n{\r\n  render()\r\n  {\r\n    const label = this.props.label;\r\n    const buttonStyle =\r\n          this.props.isMiddle ? \r\n          middleButtonStyle :\r\n          selectionButtonStyle;\r\n    \r\n    return (\r\n      <div> \r\n        <Link \r\n          className='selection-button'\r\n          style={buttonStyle}\r\n          to={this.props.linkUrl}  \r\n          > \r\n          <p style={selectionLinkStyle}>{label}</p>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst spacingHeight = '2vw';\r\n\r\nconst paddingHorizontal = '2vh';\r\nconst paddingVertical = '2vw';\r\n\r\nconst selectionButtonStyle = \r\n{\r\n  background: 'rgba(43, 38, 181, 1)',\r\n  \r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  \r\n  borderStyle: 'solid',\r\n  borderWidth: '3px',\r\n  borderRadius: '10px',\r\n  \r\n  textDecoration: 'none',\r\n  textTransform: 'uppercase',\r\n  letterSpacing: '1px',\r\n  \r\n  paddingTop: paddingVertical,\r\n  paddingBottom: paddingVertical,\r\n  paddingLeft: paddingHorizontal,\r\n  paddingRight: paddingHorizontal,\r\n}\r\n\r\nconst middleButtonStyle = \r\n{\r\n  marginTop: spacingHeight,\r\n  marginBottom: spacingHeight,\r\n  \r\n  ...selectionButtonStyle\r\n}\r\n\r\nconst selectionLinkStyle = \r\n{\r\n  textDecoration: 'none',\r\n  fontSize: '1em'\r\n}\r\n\r\nexport default SelectionButton;","import React from 'react';\r\nimport SelectionButton from '../components/SelectionButton';\r\n\r\nclass SelectionScreen extends React.Component\r\n{\r\n  render()\r\n  {\r\n    return (\r\n      <div style={selectionScreenStyle}> \r\n        <SelectionButton\r\n          label=\"Regular Jeopardy\"\r\n          linkUrl=\"/jeopardy/regular\"\r\n        />\r\n        <SelectionButton\r\n          label=\"Double Jeopardy\"\r\n          isMiddle='true'\r\n          linkUrl=\"/jeopardy/double\"\r\n        />\r\n        <SelectionButton\r\n          label=\"Final Jeopardy\"\r\n          linkUrl=\"/jeopardy/final\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst selectionScreenStyle = \r\n{\r\n  width: '100vw',\r\n  \r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  \r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  \r\n  flexGrow: 1,\r\n}\r\n\r\nexport default SelectionScreen;","import React from 'react';\r\nimport { BrowserRouter, Link} from 'react-router-dom';\r\n\r\nimport \"../App.css\";\r\nimport CardPanel from '../components/CardPanel';\r\n\r\nclass CardsScreen extends React.Component\r\n{\r\n  renderCategories = () => {\r\n    \r\n    const jeopardyData = this.props.jeopardyData;\r\n    \r\n    return (\r\n      <React.Fragment>\r\n        {jeopardyData.map((value, index) => (\r\n         <div key={value.categoryID} className=\"cell cell-category\">{value.category}</div>\r\n        ))}\r\n      </React.Fragment>\r\n    )\r\n  };\r\n  \r\n  onCardClick = (completed, cardData, category) => {\r\n    \r\n    if(!completed)\r\n      this.props.setCurrentCard.call(this, cardData, category);\r\n  }\r\n\r\n  renderCards = () => {\r\n    \r\n    var retVal = [];\r\n    var jeopardyData = this.props.jeopardyData;\r\n    \r\n    const questionCount = jeopardyData[0].cards.length;\r\n    \r\n    for(var i = 0; i < questionCount; i++)\r\n    {\r\n      var cardIndex = i + 1;\r\n\r\n      for(var j = 0; j < 3; j++)\r\n      {\r\n        var cardData = jeopardyData[j].cards[i];\r\n\r\n        var completed = cardData.completed;\r\n        \r\n        var classNameComplete = \"cell \" + (completed ? \"cell-card-completed\" : \"cell-card\"); \r\n        \r\n        retVal.push(\r\n          <Link \r\n            to={completed ? '#' : '/jeopardy/card'}\r\n            key={cardData.cardID}\r\n            onClick={this.onCardClick.bind(this, completed, cardData, jeopardyData[j].category)}\r\n            className={classNameComplete}>\r\n            {cardData.points}\r\n          </Link>\r\n        )\r\n      }\r\n    }\r\n    \r\n    return (\r\n      <React.Fragment>\r\n       {retVal}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  render()\r\n  {\r\n    return (\r\n      <div style={cardsScreenStyle}>\r\n        <div style={cardsGridStyle}>\r\n          {this.renderCategories()}\r\n          {this.renderCards()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst cardsScreenStyle = \r\n{\r\n  width: '100vw',\r\n  \r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  \r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  \r\n  flexGrow: 1,\r\n}\r\n\r\nconst gridGap = '8px';\r\n\r\nconst cardsGridStyle = \r\n{\r\n  display: 'grid',\r\n  \r\n  gridTemplateColumns: 'repeat(3, 1fr)',\r\n  gridTemplateRows: 'repeat(6, 1fr)',\r\n  \r\n  borderRadius: '10px',\r\n  \r\n  padding: gridGap,\r\n  \r\n  columnGap: gridGap,\r\n  rowGap: gridGap,\r\n  \r\n  width: '80vh',\r\n  height: '80%',\r\n  \r\n  background: 'rgba(255, 255, 255,0.25)',\r\n}\r\n\r\nexport default CardsScreen;","import React from 'react';\r\nimport { BrowserRouter, Link} from 'react-router-dom';\r\n\r\nclass CardPanel extends React.Component\r\n{\r\n  render()\r\n  {\r\n    return (\r\n      <div> \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardPanel;","import React from 'react';\r\n\r\nclass PlayerPanel extends React.Component\r\n{\r\n  handleChange = (e) => {\r\n    console.log(this.props.playerID);\r\n    this.props.updatePoints.call(this, this.props.playerID, e.target.value);\r\n  }\r\n  \r\n  render()\r\n  {\r\n    const playerName = this.props.playerName;\r\n    const points = this.props.playerPoints;\r\n    \r\n    var pointsStyle = pointsBaseStyle;\r\n    \r\n    if(this.props.playerPoints === this.props.currentHighest && !this.props.sameScores)\r\n    {\r\n      pointsStyle = {\r\n        \r\n        ...pointsBaseStyle,\r\n        color: 'rgba(0, 200, 0, 1)',\r\n      }\r\n    }\r\n    \r\n    return (\r\n      <div className='player-panel' style={playerPanelContainerStyle}> \r\n        <div style={playerPanelStyle}>\r\n          <p style={panelTextStyle}>{this.props.playerName}</p>\r\n          <input style={pointsStyle} onChange={this.handleChange.bind(this)} value={this.props.playerPoints}></input>\r\n          <div style={pointsPanelStyle}>\r\n            <div\r\n              className='points-button'\r\n              onClick={this.props.increasePoints.bind(this, this.props.playerID, false)}\r\n              style={plusButtonStyle}\r\n              >\r\n              +\r\n            </div>\r\n            <div\r\n              className='points-button'\r\n              onClick={this.props.increasePoints.bind(this, this.props.playerID, true)}\r\n              style={minusButtonStyle}\r\n              >\r\n              -\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst panelMargin = '10px';\r\n\r\nconst playerPanelContainerStyle = {\r\n  \r\n  marginLeft: panelMargin,\r\n  marginRight: panelMargin,\r\n  \r\n  padding: '10px',\r\n  \r\n  background: 'rgba(255, 255, 255, 1)',\r\n  borderRadius: '10px 10px 0px 0px',\r\n  \r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  justifyContent: 'center',\r\n  \r\n  flexGrow: '1',\r\n  \r\n  maxWidth: '20vh',\r\n}\r\n\r\nconst playerPanelStyle = {\r\n  \r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n}\r\n\r\nconst panelTextStyle = {\r\n  \r\n  fontSize: '1.25em',\r\n  marginBottom: '5px',\r\n  \r\n  textAlign: 'center',\r\n}\r\n\r\nconst pointsBaseStyle = {\r\n  \r\n  ...panelTextStyle,\r\n  width: '55%'\r\n}\r\n\r\nconst pointsPanelStyle = {\r\n  \r\n  width: '75%',\r\n  paddingTop: '5px',\r\n  \r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  justifyContent: 'space-around',\r\n  alignItems: 'center',\r\n  \r\n}\r\n\r\nconst pointsButtonStyle = {\r\n  \r\n  padding: '5px',\r\n  fontSize: '2em',\r\n  cursor: 'pointer',\r\n  \r\n  width: '3vh',\r\n  height: '2vh',\r\n  \r\n  borderStyle: 'solid',\r\n  borderColor: 'rgba(128, 128, 128, 1)',\r\n  \r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  \r\n  userSelect: 'none'\r\n}\r\n\r\nconst plusButtonStyle = {\r\n  \r\n  color: 'rgba(0, 200, 0, 1)',\r\n  \r\n  ...pointsButtonStyle,\r\n  \r\n}\r\n\r\nconst minusButtonStyle = {\r\n  \r\n  color: 'rgba(200, 0, 0, 1)',\r\n  \r\n  ...pointsButtonStyle,\r\n  \r\n}\r\n\r\nexport default PlayerPanel;","import React from 'react';\r\nimport PlayerPanel from '../components/PlayerPanel'\r\n\r\nclass PlayersSection extends React.Component\r\n{ \r\n  render()\r\n  {\r\n    const players = this.props.playerList.slice();\r\n    \r\n    var currentHighest = -1000000000;\r\n    \r\n    for(var i in players)\r\n    {\r\n      var points = players[i].playerPoints;\r\n      \r\n      if(points > currentHighest)\r\n      {\r\n        currentHighest = points;\r\n      }\r\n    }\r\n    \r\n    return (\r\n      <div style={playerSectionStyle}> \r\n        {players.map((data) => (\r\n         <PlayerPanel \r\n          key={data.playerId}\r\n          increasePoints={this.props.increasePoints}\r\n          updatePoints={this.props.updatePoints}\r\n          playerID={data.playerId}\r\n          playerName={data.playerName}\r\n          playerPoints={data.playerPoints}\r\n          currentHighest={currentHighest}\r\n         />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst sectionPadding = '10px';\r\n\r\nconst playerSectionStyle =\r\n{\r\n  height: '125px',\r\n  widht: '100%',\r\n  //background: 'rgba(0,0,0,0.5)',\r\n  \r\n  paddingLeft: sectionPadding,\r\n  paddingRight: sectionPadding,\r\n  \r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  \r\n  justifyContent: 'center',\r\n}\r\n\r\nexport default PlayersSection;","import React from 'react';\r\nimport { BrowserRouter, Link} from 'react-router-dom';\r\n\r\nimport '../App.css';\r\n\r\nclass CardHighlightScreen extends React.Component\r\n{\r\n  state = {\r\n    revealed: false\r\n  }\r\n  \r\n  revealAnswer = (e) => {\r\n    \r\n    this.setState({\r\n      revealed: !this.state.revealed\r\n    })\r\n    \r\n    this.props.setCurrentCardRevealed();\r\n  };\r\n\r\n  render()\r\n  {\r\n    var currentCard = this.props.currentCard;\r\n    \r\n    const dailyDouble = currentCard.dailyDouble;\r\n    const dailyDoubleOpacity  = dailyDouble ? '1' : '0';\r\n    \r\n    const dailyDoubleTextStyle = {\r\n      opacity: dailyDoubleOpacity,\r\n      marginTop: '5px',\r\n    }\r\n    \r\n    var answerStyle = !this.state.revealed ? answerHiddenStyle : answerShownStyle;\r\n    \r\n    const answerBorderColor = dailyDouble ? 'rgba(0, 0, 0, 1)' : 'rgba(255, 255, 255, 1)';\r\n    \r\n    answerStyle = \r\n    {\r\n      ...answerStyle,\r\n      borderTopColor: answerBorderColor\r\n    }\r\n    \r\n    const containerBackground = dailyDouble ? \r\n      'rgba(250, 215, 102, 1)' :\r\n      'rgba(20, 25, 128, 0.85)';\r\n    \r\n    const containerStyle = {\r\n      \r\n      ...cardContainerStyle,\r\n      background: containerBackground,\r\n    }\r\n    \r\n    const contentsBackground = dailyDouble ? 'rgba(255, 245, 214, 0.85)' : 'rgba(43, 38, 181, 0.85)';\r\n    \r\n    const contentsBorderColor = dailyDouble ? 'rgba(252, 209, 68, 1)' :\r\n    'rgba(80, 60, 200, 0.85)';\r\n    \r\n    const contentsColor = dailyDouble ? 'rgba(0, 0, 0, 1)' : 'rgba(255, 255, 255, 1)';\r\n    \r\n    console.log(containerStyle);\r\n    \r\n    var contentsStyle = {\r\n      \r\n      ...cardContentsStyle,\r\n      background: contentsBackground,\r\n      borderColor: contentsBorderColor,\r\n      color: contentsColor,\r\n    }\r\n    \r\n    const scoreStyle = {\r\n      fontSize: '1.5em',\r\n      display: 'flex'\r\n    }\r\n    \r\n    const scoreLabel = currentCard.points > 0 ? \r\n      currentCard.points.toString() :\r\n      \"???\";\r\n    \r\n    return (\r\n      <div style={cardHighlightScreenStyle}> \r\n        <div style={containerStyle}>\r\n          <div style={contentsStyle}> \r\n            <div style={cardInfoStyle}>\r\n              <p style={{fontSize: '1.5em'}}>{currentCard.category}</p>\r\n              <p style={scoreStyle}>{scoreLabel}</p>\r\n              <p style={dailyDoubleTextStyle}>DAILY DOUBLE</p>\r\n            </div>\r\n            <div className=\"card-question\" style={cardQuestionStyle}> \r\n              <p style={cardQuestionTextStyle}>{currentCard.answer}</p>\r\n              <p style={answerStyle}>{currentCard.question}</p>\r\n            </div>\r\n            <div className={dailyDouble ? 'reveal-label-double' : 'reveal-label'} style={cardRevealStyle}>\r\n              <p onClick={this.revealAnswer.bind(this)} style={{cursor: 'pointer'}}>Click to reveal the answer!</p>  \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst cardHighlightScreenStyle = \r\n{\r\n  width: '100vw',\r\n  \r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  \r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  \r\n  flexGrow: '1',\r\n}\r\n\r\nconst cardContainerStyle = \r\n{\r\n  height: '60vh',\r\n  width: '80vh',\r\n  \r\n  borderRadius: '25px',\r\n  \r\n  padding: '2.5vh',\r\n  \r\n  display: 'flex',\r\n  \r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n}\r\n\r\nconst cardContentsStyle =\r\n{\r\n  width: '100%',\r\n  height: '100%',\r\n  \r\n  borderRadius: '20px',\r\n  borderStyle: 'solid',\r\n  \r\n  display: 'grid',\r\n  \r\n  gridTemplateRows: '2fr 7fr 1fr',\r\n}\r\n\r\nconst cardInfoStyle =\r\n{\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  \r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n}\r\n\r\nconst cardQuestionStyle =\r\n{\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  \r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n}\r\n\r\nconst cardRevealStyle =\r\n{ \r\n  display: 'flex',\r\n  \r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n}\r\n\r\nconst cardQuestionTextStyle =\r\n{\r\n  width: '90%',\r\n  \r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  \r\n  textAlign: 'center',\r\n}\r\n\r\nconst answerHiddenStyle = \r\n{\r\n  width: '90%',\r\n  \r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  \r\n  marginTop: '0px',\r\n  paddingTop: '0px',\r\n  \r\n  maxHeight: '0px',\r\n  opacity: '0',\r\n  \r\n  textAlign: 'center',\r\n  \r\n  borderTopStyle: 'solid',\r\n  borderTopWidth: '1px',\r\n  \r\n  transitionProperty: 'all',\r\n  transitionDuration: '0.5s',\r\n  transitionTimingFunction: 'ease-in-out',\r\n  \r\n  overflow: 'hidden',\r\n}\r\n\r\nconst answerShownStyle = \r\n{\r\n  width: '90%',\r\n  \r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  \r\n  marginTop: '15px',\r\n  paddingTop: '15px',\r\n  \r\n  maxHeight: '100%',\r\n  opacity: '1',\r\n  \r\n  textAlign: 'center',\r\n  \r\n  borderTopStyle: 'solid',\r\n  borderTopWidth: '1px',\r\n  \r\n  transitionProperty: 'all',\r\n  transitionDuration: '0.5s',\r\n  transitionTimingFunction: 'ease-in-out',\r\n  \r\n  overflow: 'hidden',\r\n}\r\n\r\nexport default CardHighlightScreen;","import React from 'react';\r\nimport { BrowserRouter, Link} from 'react-router-dom';\r\n\r\nclass FinalJeopardyScreen extends React.Component\r\n{\r\n  render()\r\n  {\r\n    return (\r\n      <div style={finalJeopardyScreenStyle}> \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst finalJeopardyScreenStyle = \r\n{\r\n  width: '100vw',\r\n  \r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  \r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  \r\n  flexGrow: 1,\r\n}\r\n\r\nexport default FinalJeopardyScreen;","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport { AnimatedSwitch } from 'react-router-transition';\r\n\r\nimport './App.css';\r\n\r\nimport SplashScreen from './components/SplashScreen';\r\nimport SelectionScreen from './components/SelectionScreen';\r\nimport CardsScreen from './components/CardsScreen';\r\nimport PlayersSection from './components/PlayersSection';\r\nimport CardHighlightScreen from './components/CardHighlightScreen';\r\nimport FinalJeopardyScreen from './components/FinalJeopardyScreen';\r\n\r\nfunction ID(){\r\n  \r\n  function chr4(){\r\n    return Math.random().toString(16).slice(-4);\r\n  }\r\n  \r\n  return chr4() + chr4() +\r\n    '-' + chr4() +\r\n    '-' + chr4() +\r\n    '-' + chr4() +\r\n    '-' + chr4() + chr4() + chr4();\r\n}\r\n\r\nclass App extends React.Component\r\n{\r\n  state = {\r\n    playerList: [\r\n      {\r\n        playerId: ID(),\r\n        playerName: 'Tup',\r\n        playerPoints: 0,\r\n      },\r\n      {\r\n        playerId: ID(),\r\n        playerName: 'Nikki',\r\n        playerPoints: 0,\r\n      },\r\n      {\r\n        playerId: ID(),\r\n        playerName: 'Ojhosaka',\r\n        playerPoints: 0,\r\n      },\r\n    ],\r\n    \r\n    currentCard: {\r\n      cardID: ID(),\r\n      answer: 'a joke',\r\n      question: 'what is \"my life?\"',\r\n      points: 100,\r\n      dailyDouble: false,\r\n      completed: false,\r\n      category: 'Sad Jokes',\r\n    },\r\n    \r\n    regularJeopardyData: [\r\n      {\r\n        categoryID: ID(),\r\n        category: \"Tekken Characters\",\r\n        cards: [\r\n          {\r\n            cardID: ID(),\r\n            answer: 'He is a Tekken staple that makes use of a Brazilian martial art that incorporates acrobatics, dance, and music.',\r\n            question: 'Who is Eddy Gordo?',\r\n            points: 100,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: \"This man(?) is well known for his pro wrestling moves, and is Marduk’s rival.\",\r\n            question: 'Who is King?',\r\n            points: 200,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: \"She is Ling Xiayou’s most loyal best friend.\",\r\n            question: 'Who is Panda?',\r\n            points: 300,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: \"He awakens from his slumber, in order to save the world, when he senses a great evil.\",\r\n            question: 'Who is Mokujin?',\r\n            points: 400,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: 'He, whose appearance is always drastically changing in every game, is the leader of the manji clan and has dedicated himself to providing food, and medical assistance to the poor.',\r\n            question: 'Who is Yoshimitsu?',\r\n            points: 500,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        categoryID: ID(),\r\n        category: \"Childhood Games\",\r\n        cards: [\r\n          {\r\n            cardID: ID(),\r\n            answer: 'A game where you have a drawing of boxes with numbers inside them on the ground. The goal is to skip to the end without falling or tripping.',\r\n            question: 'What is Hopscotch?',\r\n            points: 100,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: \"To start the game, the players chant some sort of verse that includes stabbing someone and bleeding to death. The goal of the game is for the tagged person to tag as many players as they can, as long as they are not standing on a platform.\",\r\n            question: 'What is Langit Lupa?',\r\n            points: 200,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: 'This variation of tag lets the tagged player freeze the other players he tags. The untagged players are able to unfreeze the frozen ones by tagging them as well.',\r\n            question: 'What is Ice Ice Water?',\r\n            points: 300,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: 'Using cardboard discs, you slam the pile of discs on the ground in the hopes of flipping them over. You win by “claiming” the most discs that you obtain from successful flip overs.',\r\n            question: 'What is Pog?',\r\n            points: 400,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: \"2 people hold each end of a rubber rope while a person in the middle tries to jump over the rope multiple times without tripping.\",\r\n            question: 'What is Chinese Garter?',\r\n            points: 500,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        categoryID: ID(),\r\n        category: \"All About Apex\",\r\n        cards: [\r\n          {\r\n            cardID: ID(),\r\n            answer: 'The known medic of all the playable characters.',\r\n            question: 'Who is Lifeline?',\r\n            points: 100,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: 'This is the term used to refer to all playable characters in the game.',\r\n            question: 'What are Legends?',\r\n            points: 200,\r\n            dailyDouble: true,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: 'Known as the high powered pistol. Its name is also used for helping out a friend talk to a stranger in social settings, such as parties and bars.',\r\n            question: 'What is a Wingman?',\r\n            points: 300,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: 'Game studio that developed Apex Legends.',\r\n            question: 'What is Respawn Entertainment?',\r\n            points: 400,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: 'The first playable map.',\r\n            question: \"What is King's Canyon?\",\r\n            points: 500,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n        ]\r\n      },\r\n    ],\r\n    \r\n    doubleJeopardyData: [\r\n      {\r\n        categoryID: ID(),\r\n        category: \"Where in LS?\",\r\n        cards: [\r\n          {\r\n            cardID: ID(),\r\n            answer: \"You wouldn't want to have classes here because it means you have to run to your next class, especially if it’s in SOM.\",\r\n            question: 'Where is Bellarmine Hall?',\r\n            points: 200,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: 'If you see a couple alone in this “lane,” you already know what’s going on. Cue “it’s not you, it’s me.”',\r\n            question: \"Where is Lover's Lane?\",\r\n            points: 400,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: 'The place notorious for having multiple “memeable runs.”',\r\n            question: 'Where is Red Brick Road?',\r\n            points: 600,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: 'The famous white wall, known to be the background of multiple promotional DPs.',\r\n            question: \"Where is Schmitt Hall/Wall?\",\r\n            points: 800,\r\n            dailyDouble: true,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: 'If you ever lose your ID, this place will save you from getting sanctioned because this is where you get a piece of paper that makes you immune from the guards.',\r\n            question: 'Where is Xavier Hall?',\r\n            points: 1000,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        categoryID: ID(),\r\n        category: \"Shooter Games\",\r\n        cards: [\r\n          {\r\n            cardID: ID(),\r\n            answer: 'A classic valve FPS game, where one team is trying to plant a bomb, while the other tries to prevent the first team from successfully letting the bomb explode.',\r\n            question: \"What is Counter Strike?\",\r\n            points: 200,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: \"A fairly new game that has been overtaking the whole FPS community with it’s character design, which is comparable to Overwatch, and it’s gameplay that is comparable to Counter Strike.\",\r\n            question: \"What is Valorant?\",\r\n            points: 400,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: 'A third person shooter where you use paint blasters to color your enemies and the map.',\r\n            question: \"What is Splatoon?\",\r\n            points: 600,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: '“Oh no red enemies everywhere. I have to shooooooooooooooooot them before they kiiiiiiiiiiiiiiiiill me.”',\r\n            question: \"What is Superhot?\",\r\n            points: 800,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: \"An FPS placed in a post apocalyptic earth with flesh eating zombies, where you survive by scavenging for supplies and crafting weapons. It helps that you’re basically a parkour pro that can jump from house to house, and scale the walls of buildings.\",\r\n            question: \"What is Dying Light?\",\r\n            points: 1000,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        categoryID: ID(),\r\n        category: \"The New Normal\",\r\n        cards: [\r\n          {\r\n            cardID: ID(),\r\n            answer: 'You can’t go out without wearing this. Also the thing “drama queens/kings” complain about cause they can’t “breathe properly” LOL',\r\n            question: 'What is a face Mask?',\r\n            points: 200,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: 'Thanks to this, you don’t have to physically see that annoying officemate of yours.',\r\n            question: \"What is 'Work From Home (WFH)?'\",\r\n            points: 400,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: \"This hyphenated term is used when you wanna hang out and get tipsy/drunk with your friends, but you can’t go out because of the quarantine.\",\r\n            question: \"What is 'E-nom?'\",\r\n            points: 600,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: \"Because of this rule, I now have to be careful of how much alcohol I drink. I don’t wanna run out of drinks during the quarantine.\",\r\n            question: \"What is 'Liquor Ban?'\",\r\n            points: 800,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: \"Even if you can’t always go outside, platforms on the internet still give you a hard time saving because you can still do this. You get deliveries, and deliveries, and deliveries arriving on your doorstep.\",\r\n            question: \"What is 'Online Shopping?'\",\r\n            points: 1000,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n        ]\r\n      },\r\n    ],\r\n    \r\n    finalCard: {\r\n      cardID: ID(),\r\n      answer: 'The most repeated word in Daft Punk’s \"Around the World.\"',\r\n      question: 'What is \"Around the world?\"',\r\n      points: 0,\r\n      dailyDouble: false,\r\n      completed: false,\r\n      category: 'Final Jeopardy',\r\n    },\r\n  }\r\n  \r\n  setCurrentCard = (cardData, category) => {\r\n    \r\n    const { stateCopy } = this.state;\r\n    this.setState({\r\n      ...stateCopy,\r\n      currentCard: {...cardData, category}\r\n    });\r\n  }\r\n\r\n  setCurrentCardRevealed = () => \r\n  {\r\n    const cardID = this.state.currentCard.cardID;\r\n    \r\n    const { stateCopy } = this.state;\r\n    \r\n    const regularJeopardyDataCopy = this.state.regularJeopardyData;\r\n    const doubleJeopardyDataCopy = this.state.doubleJeopardyData;\r\n    \r\n    for(var i = 0; i < regularJeopardyDataCopy.length; i++)\r\n    {\r\n      for(var j = 0; j < regularJeopardyDataCopy[i].cards.length; j++)\r\n      {\r\n        if(regularJeopardyDataCopy[i].cards[j].cardID === cardID)\r\n        {\r\n          regularJeopardyDataCopy[i].cards[j].completed = true;\r\n        }\r\n      }\r\n    }\r\n    \r\n    for(var i = 0; i < doubleJeopardyDataCopy.length; i++)\r\n    {\r\n      for(var j = 0; j < doubleJeopardyDataCopy[i].cards.length; j++)\r\n      {\r\n        if(doubleJeopardyDataCopy[i].cards[j].cardID === cardID)\r\n        {\r\n          doubleJeopardyDataCopy[i].cards[j].completed = true;\r\n        }\r\n      }\r\n    }\r\n    \r\n    this.setState({\r\n      ...stateCopy,\r\n      regularJeopardyData: regularJeopardyDataCopy,\r\n      doubleJeopardyData: doubleJeopardyDataCopy,\r\n    })\r\n    \r\n    console.log(\"Current card revealed!\");\r\n  }\r\n  \r\n  handleClick = (e) => {\r\n    console.log(\"Hello\");\r\n  };\r\n\r\n  updatePoints = (id, value) => {\r\n    \r\n    const newPlayerList = this.state.playerList.slice();\r\n    var newPoints = parseInt(value, 10);\r\n\r\n    console.log(newPlayerList);\r\n    \r\n    if(isNaN(newPoints))\r\n      newPoints = 0;\r\n    \r\n    if(!isNaN(newPoints))\r\n    {\r\n      var playerIndex = newPlayerList.findIndex(data => data.playerId === id);\r\n\r\n      console.log(newPlayerList[playerIndex]);\r\n    \r\n      newPlayerList[playerIndex].playerPoints = newPoints;\r\n\r\n      this.setState(\r\n      {\r\n        playerList: newPlayerList\r\n      })\r\n    }\r\n    \r\n  }\r\n\r\n  increasePoints = (id, subtract) => { \r\n    \r\n    if(this.state.currentCard !== null)\r\n    {\r\n      const newPlayerList = this.state.playerList.slice();\r\n\r\n      var playerIndex = newPlayerList.findIndex(data => data.playerId === id);\r\n\r\n      var multiplier = this.state.currentCard.dailyDouble ? 2 : 1;\r\n      \r\n      newPlayerList[playerIndex].playerPoints += (\r\n        subtract ? \r\n        (-this.state.currentCard.points * multiplier):\r\n        (this.state.currentCard.points * multiplier)\r\n      )\r\n\r\n      console.log(newPlayerList);\r\n\r\n      this.setState(\r\n      {\r\n        playerList: newPlayerList\r\n      })\r\n    }\r\n  }\r\n  \r\n  renderPlayers = () => {\r\n    \r\n    return (\r\n      <PlayersSection \r\n        playerList={this.state.playerList}\r\n        increasePoints={this.increasePoints}\r\n        updatePoints={this.updatePoints}\r\n      />\r\n    )\r\n  };\r\n\r\n  render()\r\n  {\r\n    return (\r\n   \r\n      <Router>\r\n      \r\n        <AnimatedSwitch\r\n          atEnter={{opacity:0}}\r\n          atLeave={{opacity:0}}\r\n          atActive={{opacity:1}}\r\n          className=\"switch-wrapper\"\r\n          >\r\n          \r\n          <Route exact path=\"/\">\r\n            <SplashScreen onClick={this.handleClick} /> \r\n          </Route>\r\n\r\n          <Route path=\"/jeopardy/selection\">\r\n            <div style={pageStyle} > \r\n              <SelectionScreen />  \r\n              {this.renderPlayers()}\r\n            </div>\r\n          </Route>\r\n\r\n          <Route path=\"/jeopardy/regular\">\r\n            <div style={pageStyle} > \r\n              <CardsScreen \r\n              jeopardyData={this.state.regularJeopardyData}\r\n              setCurrentCard={this.setCurrentCard}\r\n              />  \r\n              {this.renderPlayers()}\r\n            </div>\r\n          </Route>\r\n\r\n          <Route path=\"/jeopardy/double\">\r\n            <div style={pageStyle} > \r\n              <CardsScreen \r\n              jeopardyData={this.state.doubleJeopardyData}\r\n              setCurrentCard={this.setCurrentCard}\r\n              />  \r\n              {this.renderPlayers()}\r\n            </div>\r\n          </Route>\r\n\r\n          <Route path=\"/jeopardy/final\">\r\n            <div style={pageStyle} > \r\n              <CardHighlightScreen \r\n              currentCard={this.state.finalCard}\r\n              setCurrentCardRevealed={this.setCurrentCardRevealed}\r\n              />  \r\n              {this.renderPlayers()}\r\n            </div>\r\n          </Route>\r\n\r\n          <Route path=\"/jeopardy/card\">\r\n            <div style={pageStyle} > \r\n              <CardHighlightScreen \r\n              currentCard={this.state.currentCard}\r\n              setCurrentCardRevealed={this.setCurrentCardRevealed}\r\n              />  \r\n              {this.renderPlayers()}\r\n            </div>\r\n          </Route>\r\n\r\n        </AnimatedSwitch>\r\n\r\n      </Router>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nconst pageStyle = \r\n{\r\n  height: '100vh',\r\n  display: 'flex',\r\n  flexDirection: 'column'\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}