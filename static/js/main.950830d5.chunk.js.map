{"version":3,"sources":["images/shot-glass-raw.png","components/BigLogo.js","components/SplashButton.js","components/SplashButtons.js","components/SplashScreen.js","components/SelectionButton.js","components/SelectionScreen.js","components/CardsScreen.js","components/CardPanel.js","components/PlayerPanel.js","components/PlayersSection.js","components/CardHighlightScreen.js","components/FinalJeopardyScreen.js","components/ShotGlassScreen.js","App.js","index.js"],"names":["module","exports","BigLogo","state","style","bigLogoContainerStyle","bigLogoOverlayStyle","bigLogoStyle","src","alt","React","Component","display","justifyContent","alignItems","width","background","height","zIndex","position","top","SplashButton","handleClick","props","onClick","buttonStyle","this","isMiddle","middleButtonStyle","normalButtonStyle","label","className","to","linkUrl","textDecoration","fontSize","fontWeight","letterSpacing","paddingTop","paddingBottom","paddingLeft","paddingRight","color","cursor","marginLeft","marginRight","SplashButtons","splashButtonsStyle","flexDirection","SplashScreen","splashStyle","SelectionButton","selectionButtonStyle","selectionLinkStyle","borderStyle","borderWidth","borderRadius","textTransform","marginTop","marginBottom","SelectionScreen","selectionScreenStyle","winnerButtonStyle","flexGrow","right","padding","opacity","CardsScreen","renderCategories","jeopardyData","Fragment","map","value","index","key","categoryID","category","onCardClick","completed","cardData","setCurrentCard","call","renderCards","retVal","questionCount","cards","length","i","j","classNameComplete","push","cardID","bind","points","cardsScreenStyle","cardsGridStyle","gridTemplateColumns","gridTemplateRows","columnGap","rowGap","PlayerPanel","handleChange","e","console","log","playerID","updatePoints","target","playerName","playerPoints","pointsStyle","pointsBaseStyle","currentHighest","sameScores","playerPanelContainerStyle","playerPanelStyle","panelTextStyle","onChange","pointsPanelStyle","increasePoints","plusButtonStyle","minusButtonStyle","maxWidth","textAlign","pointsButtonStyle","borderColor","userSelect","PlayersSection","players","playerList","slice","playerSectionStyle","data","playerId","widht","CardHighlightScreen","revealed","revealAnswer","setState","setCurrentCardRevealed","currentCard","dailyDouble","dailyDoubleTextStyle","answerStyle","answerShownStyle","answerHiddenStyle","answerBorderColor","borderTopColor","containerBackground","containerStyle","cardContainerStyle","contentsBackground","contentsBorderColor","contentsColor","contentsStyle","cardContentsStyle","scoreLabel","toString","cardHighlightScreenStyle","cardInfoStyle","cardQuestionStyle","cardQuestionTextStyle","answer","question","cardRevealStyle","maxHeight","borderTopStyle","borderTopWidth","transitionProperty","transitionDuration","transitionTimingFunction","overflow","finalJeopardyScreenStyle","ShotGlassScreen","shotGlassScreenStyle","ShotGlassRaw","shotGlassStyle","winnerLabelStyle","winner","left","fontFamily","transform","alignContent","ID","chr4","Math","random","App","regularJeopardyData","doubleJeopardyData","finalCard","stateCopy","regularJeopardyDataCopy","doubleJeopardyDataCopy","id","newPlayerList","newPoints","parseInt","isNaN","playerIndex","findIndex","subtract","multiplier","getCurrentWinner","currentWinner","currentPoints","renderPlayers","atEnter","atLeave","atActive","exact","path","pageStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.950830d5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shot-glass-raw.5fc599cc.png\";","import React from 'react';\r\n\r\nclass BigLogo extends React.Component\r\n{\r\n  state = {\r\n    \r\n  }\r\n  \r\n  render()\r\n  {\r\n    return (\r\n      \r\n      <div style={bigLogoContainerStyle}>\r\n\r\n        <div style={bigLogoOverlayStyle}> \r\n      \r\n          <img \r\n            style={bigLogoStyle}\r\n            src=\"./images/big-logo.png\" \r\n            alt=\"Tipsy Jeopardy Big Logo\"\r\n          />\r\n      \r\n        </div>\r\n\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nconst bigLogoContainerStyle = {\r\n\r\n  display: 'flex',\r\n  \r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  \r\n  width: '100%',\r\n}\r\n\r\nconst bigLogoOverlayStyle = {\r\n  \r\n  background: 'rgba(0,0,0,0.3)',\r\n  width: '100vw',\r\n  height: '20vh',\r\n  \r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n}\r\n\r\nconst bigLogoStyle = {\r\n  \r\n  width: '100vh',\r\n  zIndex: '1',\r\n  position: 'relative',\r\n  top: '-7vh',\r\n}\r\n\r\nexport default BigLogo;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport '../animations.css';\r\n\r\nclass SplashButton extends React.Component\r\n{\r\n  state = {\r\n    \r\n  }\r\n  \r\n  handleClick = () => {\r\n    this.props.onClick();\r\n  }\r\n\r\n  render()\r\n  {\r\n    const buttonStyle = \r\n          this.props.isMiddle ?\r\n          middleButtonStyle :\r\n          normalButtonStyle;\r\n    \r\n    const label = this.props.label;\r\n    \r\n    return (\r\n      \r\n      <div \r\n        className='floating' \r\n        style={buttonStyle} \r\n        onClick={this.handleClick}>\r\n      \r\n        <Link \r\n          to={this.props.linkUrl}\r\n          style={{textDecoration: 'none'}}\r\n          className='splash-button-text'>\r\n            {label}\r\n        </Link>\r\n      \r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nconst verticalPadding = '2vw'\r\nconst horizontalPadding = '8vw';\r\n\r\nconst buttonWidth = '10vw';\r\nconst middleMargin = '12px';\r\n\r\nconst normalButtonStyle = {\r\n   \r\n  fontSize: '2.5em',\r\n  fontWeight: 'bold',\r\n\r\n  letterSpacing: '2px',\r\n  \r\n  display: 'flex',\r\n  \r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  \r\n  paddingTop: verticalPadding,\r\n  paddingBottom: verticalPadding,\r\n  paddingLeft: horizontalPadding,\r\n  paddingRight: horizontalPadding,\r\n  \r\n  /*\r\n  borderStyle: 'solid',\r\n  borderWidth: '2px',\r\n  borderRadius: '5px',\r\n  borderColor: 'rgba(255, 255, 255, 1)',\r\n  \r\n  background: '#2b26b5',\r\n  */\r\n  \r\n  color: 'rgba(255, 255, 255, 0.75)',\r\n  cursor: 'pointer',\r\n  \r\n  position: 'relative',\r\n  \r\n  textDecoration: 'none',\r\n}\r\n\r\nconst middleButtonStyle = {\r\n           \r\n  marginLeft: middleMargin,\r\n  marginRight: middleMargin,\r\n  \r\n  ...normalButtonStyle,\r\n}\r\n  \r\nexport default SplashButton;\r\n","import React from 'react';\r\nimport SplashButton from '../components/SplashButton';\r\n\r\nclass SplashButtons extends React.Component\r\n{\r\n  state = {\r\n    \r\n  }\r\n  \r\n  render()\r\n  {\r\n    return (\r\n      <div style={splashButtonsStyle}>\r\n        <SplashButton \r\n          label=\"PLAY NOW\" \r\n          linkUrl=\"/jeopardy/selection\"\r\n          onClick={this.props.onClick} \r\n          />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst splashButtonsStyle = {\r\n                            \r\n  display: 'flex',\r\n  flexDirection: 'flex-row'\r\n  \r\n}\r\n\r\nexport default SplashButtons;\r\n","import React from 'react';\r\nimport BigLogo from '../components/BigLogo';\r\nimport SplashButtons from '../components/SplashButtons';\r\n\r\nclass SplashScreen extends React.Component\r\n{\r\n  render()\r\n  {\r\n    return (\r\n      <div style={splashStyle}>\r\n        \r\n        <BigLogo />\r\n        <SplashButtons onClick={this.props.onClick} />\r\n      \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst splashStyle = {\r\n  height: '100vh',\r\n  width: '100vw',\r\n  \r\n  display: 'flex',\r\n  \r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  \r\n  flexDirection: 'column',\r\n}\r\n\r\nexport default SplashScreen;\r\n","import React from 'react';\r\nimport { BrowserRouter, Link} from 'react-router-dom';\r\n\r\nimport '../animations.css';\r\n\r\nclass SelectionButton extends React.Component\r\n{\r\n  render()\r\n  {\r\n    const label = this.props.label;\r\n    const buttonStyle =\r\n          this.props.isMiddle ? \r\n          middleButtonStyle :\r\n          selectionButtonStyle;\r\n    \r\n    return (\r\n      <div> \r\n        <Link \r\n          className='selection-button'\r\n          style={buttonStyle}\r\n          to={this.props.linkUrl}  \r\n          > \r\n          <p style={selectionLinkStyle}>{label}</p>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst spacingHeight = '2vw';\r\n\r\nconst paddingHorizontal = '2vh';\r\nconst paddingVertical = '2vw';\r\n\r\nconst selectionButtonStyle = \r\n{\r\n  background: 'rgba(43, 38, 181, 1)',\r\n  \r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  \r\n  borderStyle: 'solid',\r\n  borderWidth: '3px',\r\n  borderRadius: '10px',\r\n  \r\n  textDecoration: 'none',\r\n  textTransform: 'uppercase',\r\n  letterSpacing: '1px',\r\n  \r\n  paddingTop: paddingVertical,\r\n  paddingBottom: paddingVertical,\r\n  paddingLeft: paddingHorizontal,\r\n  paddingRight: paddingHorizontal,\r\n}\r\n\r\nconst middleButtonStyle = \r\n{\r\n  marginTop: spacingHeight,\r\n  marginBottom: spacingHeight,\r\n  \r\n  ...selectionButtonStyle\r\n}\r\n\r\nconst selectionLinkStyle = \r\n{\r\n  textDecoration: 'none',\r\n  fontSize: '1em'\r\n}\r\n\r\nexport default SelectionButton;","import React from 'react';\r\nimport { BrowserRouter, Link } from 'react-router-dom';\r\n\r\nimport SelectionButton from '../components/SelectionButton';\r\n\r\nclass SelectionScreen extends React.Component\r\n{\r\n  render()\r\n  {\r\n    return (\r\n      <div style={selectionScreenStyle}> \r\n        <SelectionButton\r\n          label=\"Regular Jeopardy\"\r\n          linkUrl=\"/jeopardy/regular\"\r\n        />\r\n        <SelectionButton\r\n          label=\"Double Jeopardy\"\r\n          isMiddle='true'\r\n          linkUrl=\"/jeopardy/double\"\r\n        />\r\n        <SelectionButton\r\n          label=\"Final Jeopardy\"\r\n          linkUrl=\"/jeopardy/final\"\r\n        />\r\n        <Link\r\n          style={winnerButtonStyle}\r\n          to=\"/jeopardy/winner\"\r\n          > WINNER </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst selectionScreenStyle = \r\n{\r\n  width: '100vw',\r\n  \r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  \r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  \r\n  flexGrow: 1,\r\n}\r\n\r\nconst winnerButtonStyle = \r\n{\r\n  position: 'absolute',\r\n  top: '0',\r\n  right: '0',\r\n  \r\n  padding: '10px',\r\n  opacity: '0',\r\n}\r\n\r\nexport default SelectionScreen;","import React from 'react';\r\nimport { BrowserRouter, Link} from 'react-router-dom';\r\n\r\nimport \"../App.css\";\r\nimport CardPanel from '../components/CardPanel';\r\n\r\nclass CardsScreen extends React.Component\r\n{\r\n  renderCategories = () => {\r\n    \r\n    const jeopardyData = this.props.jeopardyData;\r\n    \r\n    return (\r\n      <React.Fragment>\r\n        {jeopardyData.map((value, index) => (\r\n         <div key={value.categoryID} className=\"cell cell-category\">{value.category}</div>\r\n        ))}\r\n      </React.Fragment>\r\n    )\r\n  };\r\n  \r\n  onCardClick = (completed, cardData, category) => {\r\n    \r\n    if(!completed)\r\n      this.props.setCurrentCard.call(this, cardData, category);\r\n  }\r\n\r\n  renderCards = () => {\r\n    \r\n    var retVal = [];\r\n    var jeopardyData = this.props.jeopardyData;\r\n    \r\n    const questionCount = jeopardyData[0].cards.length;\r\n    \r\n    for(var i = 0; i < questionCount; i++)\r\n    {\r\n      var cardIndex = i + 1;\r\n\r\n      for(var j = 0; j < 3; j++)\r\n      {\r\n        var cardData = jeopardyData[j].cards[i];\r\n\r\n        var completed = cardData.completed;\r\n        \r\n        var classNameComplete = \"cell \" + (completed ? \"cell-card-completed\" : \"cell-card\"); \r\n        \r\n        retVal.push(\r\n          <Link \r\n            to={completed ? '#' : '/jeopardy/card'}\r\n            key={cardData.cardID}\r\n            onClick={this.onCardClick.bind(this, completed, cardData, jeopardyData[j].category)}\r\n            className={classNameComplete}>\r\n            {cardData.points}\r\n          </Link>\r\n        )\r\n      }\r\n    }\r\n    \r\n    return (\r\n      <React.Fragment>\r\n       {retVal}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  render()\r\n  {\r\n    return (\r\n      <div style={cardsScreenStyle}>\r\n        <div style={cardsGridStyle}>\r\n          {this.renderCategories()}\r\n          {this.renderCards()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst cardsScreenStyle = \r\n{\r\n  width: '100vw',\r\n  \r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  \r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  \r\n  flexGrow: 1,\r\n}\r\n\r\nconst gridGap = '8px';\r\n\r\nconst cardsGridStyle = \r\n{\r\n  display: 'grid',\r\n  \r\n  gridTemplateColumns: 'repeat(3, 1fr)',\r\n  gridTemplateRows: 'repeat(6, 1fr)',\r\n  \r\n  borderRadius: '10px',\r\n  \r\n  padding: gridGap,\r\n  \r\n  columnGap: gridGap,\r\n  rowGap: gridGap,\r\n  \r\n  width: '80vh',\r\n  height: '80%',\r\n  \r\n  background: 'rgba(255, 255, 255,0.25)',\r\n}\r\n\r\nexport default CardsScreen;","import React from 'react';\r\nimport { BrowserRouter, Link} from 'react-router-dom';\r\n\r\nclass CardPanel extends React.Component\r\n{\r\n  render()\r\n  {\r\n    return (\r\n      <div> \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardPanel;","import React from 'react';\r\n\r\nclass PlayerPanel extends React.Component\r\n{\r\n  handleChange = (e) => {\r\n    console.log(this.props.playerID);\r\n    this.props.updatePoints.call(this, this.props.playerID, e.target.value);\r\n  }\r\n  \r\n  render()\r\n  {\r\n    const playerName = this.props.playerName;\r\n    const points = this.props.playerPoints;\r\n    \r\n    var pointsStyle = pointsBaseStyle;\r\n    \r\n    if(this.props.playerPoints === this.props.currentHighest && !this.props.sameScores)\r\n    {\r\n      pointsStyle = {\r\n        \r\n        ...pointsBaseStyle,\r\n        color: 'rgba(0, 200, 0, 1)',\r\n      }\r\n    }\r\n    \r\n    return (\r\n      <div className='player-panel' style={playerPanelContainerStyle}> \r\n        <div style={playerPanelStyle}>\r\n          <p style={panelTextStyle}>{this.props.playerName}</p>\r\n          <input style={pointsStyle} onChange={this.handleChange.bind(this)} value={this.props.playerPoints}></input>\r\n          <div style={pointsPanelStyle}>\r\n            <div\r\n              className='points-button'\r\n              onClick={this.props.increasePoints.bind(this, this.props.playerID, false)}\r\n              style={plusButtonStyle}\r\n              >\r\n              +\r\n            </div>\r\n            <div\r\n              className='points-button'\r\n              onClick={this.props.increasePoints.bind(this, this.props.playerID, true)}\r\n              style={minusButtonStyle}\r\n              >\r\n              -\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst panelMargin = '10px';\r\n\r\nconst playerPanelContainerStyle = {\r\n  \r\n  marginLeft: panelMargin,\r\n  marginRight: panelMargin,\r\n  \r\n  padding: '10px',\r\n  \r\n  background: 'rgba(255, 255, 255, 1)',\r\n  borderRadius: '10px 10px 0px 0px',\r\n  \r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  justifyContent: 'center',\r\n  \r\n  flexGrow: '1',\r\n  \r\n  maxWidth: '20vh',\r\n}\r\n\r\nconst playerPanelStyle = {\r\n  \r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n}\r\n\r\nconst panelTextStyle = {\r\n  \r\n  fontSize: '1.25em',\r\n  marginBottom: '5px',\r\n  \r\n  textAlign: 'center',\r\n}\r\n\r\nconst pointsBaseStyle = {\r\n  \r\n  ...panelTextStyle,\r\n  width: '55%'\r\n}\r\n\r\nconst pointsPanelStyle = {\r\n  \r\n  width: '75%',\r\n  paddingTop: '5px',\r\n  \r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  justifyContent: 'space-around',\r\n  alignItems: 'center',\r\n  \r\n}\r\n\r\nconst pointsButtonStyle = {\r\n  \r\n  padding: '5px',\r\n  fontSize: '2em',\r\n  cursor: 'pointer',\r\n  \r\n  width: '3vh',\r\n  height: '2vh',\r\n  \r\n  borderStyle: 'solid',\r\n  borderColor: 'rgba(128, 128, 128, 1)',\r\n  \r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  \r\n  userSelect: 'none'\r\n}\r\n\r\nconst plusButtonStyle = {\r\n  \r\n  color: 'rgba(0, 200, 0, 1)',\r\n  \r\n  ...pointsButtonStyle,\r\n  \r\n}\r\n\r\nconst minusButtonStyle = {\r\n  \r\n  color: 'rgba(200, 0, 0, 1)',\r\n  \r\n  ...pointsButtonStyle,\r\n  \r\n}\r\n\r\nexport default PlayerPanel;","import React from 'react';\r\nimport PlayerPanel from '../components/PlayerPanel'\r\n\r\nclass PlayersSection extends React.Component\r\n{ \r\n  render()\r\n  {\r\n    const players = this.props.playerList.slice();\r\n    \r\n    var currentHighest = -1000000000;\r\n    \r\n    for(var i in players)\r\n    {\r\n      var points = players[i].playerPoints;\r\n      \r\n      if(points > currentHighest)\r\n      {\r\n        currentHighest = points;\r\n      }\r\n    }\r\n    \r\n    return (\r\n      <div style={playerSectionStyle}> \r\n        {players.map((data) => (\r\n         <PlayerPanel \r\n          key={data.playerId}\r\n          increasePoints={this.props.increasePoints}\r\n          updatePoints={this.props.updatePoints}\r\n          playerID={data.playerId}\r\n          playerName={data.playerName}\r\n          playerPoints={data.playerPoints}\r\n          currentHighest={currentHighest}\r\n         />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst sectionPadding = '10px';\r\n\r\nconst playerSectionStyle =\r\n{\r\n  height: '125px',\r\n  widht: '100%',\r\n  //background: 'rgba(0,0,0,0.5)',\r\n  \r\n  paddingLeft: sectionPadding,\r\n  paddingRight: sectionPadding,\r\n  \r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  \r\n  justifyContent: 'center',\r\n}\r\n\r\nexport default PlayersSection;","import React from 'react';\r\nimport { BrowserRouter, Link} from 'react-router-dom';\r\n\r\nimport '../App.css';\r\n\r\nclass CardHighlightScreen extends React.Component\r\n{\r\n  state = {\r\n    revealed: false\r\n  }\r\n  \r\n  revealAnswer = (e) => {\r\n    \r\n    this.setState({\r\n      revealed: !this.state.revealed\r\n    })\r\n    \r\n    this.props.setCurrentCardRevealed();\r\n  };\r\n\r\n  render()\r\n  {\r\n    var currentCard = this.props.currentCard;\r\n    \r\n    const dailyDouble = currentCard.dailyDouble;\r\n    const dailyDoubleOpacity  = dailyDouble ? '1' : '0';\r\n    \r\n    const dailyDoubleTextStyle = {\r\n      opacity: dailyDoubleOpacity,\r\n      marginTop: '5px',\r\n    }\r\n    \r\n    var answerStyle = !this.state.revealed ? answerHiddenStyle : answerShownStyle;\r\n    \r\n    const answerBorderColor = dailyDouble ? 'rgba(0, 0, 0, 1)' : 'rgba(255, 255, 255, 1)';\r\n    \r\n    answerStyle = \r\n    {\r\n      ...answerStyle,\r\n      borderTopColor: answerBorderColor\r\n    }\r\n    \r\n    const containerBackground = dailyDouble ? \r\n      'rgba(250, 215, 102, 1)' :\r\n      'rgba(20, 25, 128, 0.85)';\r\n    \r\n    const containerStyle = {\r\n      \r\n      ...cardContainerStyle,\r\n      background: containerBackground,\r\n    }\r\n    \r\n    const contentsBackground = dailyDouble ? 'rgba(255, 245, 214, 0.85)' : 'rgba(43, 38, 181, 0.85)';\r\n    \r\n    const contentsBorderColor = dailyDouble ? 'rgba(252, 209, 68, 1)' :\r\n    'rgba(80, 60, 200, 0.85)';\r\n    \r\n    const contentsColor = dailyDouble ? 'rgba(0, 0, 0, 1)' : 'rgba(255, 255, 255, 1)';\r\n    \r\n    console.log(containerStyle);\r\n    \r\n    var contentsStyle = {\r\n      \r\n      ...cardContentsStyle,\r\n      background: contentsBackground,\r\n      borderColor: contentsBorderColor,\r\n      color: contentsColor,\r\n    }\r\n    \r\n    const scoreStyle = {\r\n      fontSize: '1.5em',\r\n      display: 'flex'\r\n    }\r\n    \r\n    const scoreLabel = currentCard.points > 0 ? \r\n      currentCard.points.toString() :\r\n      \"???\";\r\n    \r\n    return (\r\n      <div style={cardHighlightScreenStyle}> \r\n        <div style={containerStyle}>\r\n          <div style={contentsStyle}> \r\n            <div style={cardInfoStyle}>\r\n              <p style={{fontSize: '1.5em'}}>{currentCard.category}</p>\r\n              <p style={scoreStyle}>{scoreLabel}</p>\r\n              <p style={dailyDoubleTextStyle}>DAILY DOUBLE</p>\r\n            </div>\r\n            <div className=\"card-question\" style={cardQuestionStyle}> \r\n              <p style={cardQuestionTextStyle}>{currentCard.answer}</p>\r\n              <p style={answerStyle}>{currentCard.question}</p>\r\n            </div>\r\n            <div className={dailyDouble ? 'reveal-label-double' : 'reveal-label'} style={cardRevealStyle}>\r\n              <p onClick={this.revealAnswer.bind(this)} style={{cursor: 'pointer'}}>Click to reveal the answer!</p>  \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst cardHighlightScreenStyle = \r\n{\r\n  width: '100vw',\r\n  \r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  \r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  \r\n  flexGrow: '1',\r\n}\r\n\r\nconst cardContainerStyle = \r\n{\r\n  height: '60vh',\r\n  width: '80vh',\r\n  \r\n  borderRadius: '25px',\r\n  \r\n  padding: '2.5vh',\r\n  \r\n  display: 'flex',\r\n  \r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n}\r\n\r\nconst cardContentsStyle =\r\n{\r\n  width: '100%',\r\n  height: '100%',\r\n  \r\n  borderRadius: '20px',\r\n  borderStyle: 'solid',\r\n  \r\n  display: 'grid',\r\n  \r\n  gridTemplateRows: '2fr 7fr 1fr',\r\n}\r\n\r\nconst cardInfoStyle =\r\n{\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  \r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n}\r\n\r\nconst cardQuestionStyle =\r\n{\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  \r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n}\r\n\r\nconst cardRevealStyle =\r\n{ \r\n  display: 'flex',\r\n  \r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n}\r\n\r\nconst cardQuestionTextStyle =\r\n{\r\n  width: '90%',\r\n  \r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  \r\n  textAlign: 'center',\r\n}\r\n\r\nconst answerHiddenStyle = \r\n{\r\n  width: '90%',\r\n  \r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  \r\n  marginTop: '0px',\r\n  paddingTop: '0px',\r\n  \r\n  maxHeight: '0px',\r\n  opacity: '0',\r\n  \r\n  textAlign: 'center',\r\n  \r\n  borderTopStyle: 'solid',\r\n  borderTopWidth: '1px',\r\n  \r\n  transitionProperty: 'all',\r\n  transitionDuration: '0.5s',\r\n  transitionTimingFunction: 'ease-in-out',\r\n  \r\n  overflow: 'hidden',\r\n}\r\n\r\nconst answerShownStyle = \r\n{\r\n  width: '90%',\r\n  \r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  \r\n  marginTop: '15px',\r\n  paddingTop: '15px',\r\n  \r\n  maxHeight: '100%',\r\n  opacity: '1',\r\n  \r\n  textAlign: 'center',\r\n  \r\n  borderTopStyle: 'solid',\r\n  borderTopWidth: '1px',\r\n  \r\n  transitionProperty: 'all',\r\n  transitionDuration: '0.5s',\r\n  transitionTimingFunction: 'ease-in-out',\r\n  \r\n  overflow: 'hidden',\r\n}\r\n\r\nexport default CardHighlightScreen;","import React from 'react';\r\nimport { BrowserRouter, Link} from 'react-router-dom';\r\n\r\nclass FinalJeopardyScreen extends React.Component\r\n{\r\n  render()\r\n  {\r\n    return (\r\n      <div style={finalJeopardyScreenStyle}> \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst finalJeopardyScreenStyle = \r\n{\r\n  width: '100vw',\r\n  \r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  \r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  \r\n  flexGrow: 1,\r\n}\r\n\r\nexport default FinalJeopardyScreen;","import React from 'react';\r\n\r\nimport '../App.css';\r\nimport ShotGlassRaw from '../images/shot-glass-raw.png';\r\n\r\nclass ShotGlassScreen extends React.Component\r\n{\r\n  render()\r\n  {\r\n    return (\r\n      <div style={shotGlassScreenStyle}>\r\n        <img \r\n          src={ShotGlassRaw}\r\n          style={shotGlassStyle}\r\n        />\r\n        <p style={winnerLabelStyle}>{this.props.winner}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst shotGlassScreenStyle = \r\n{\r\n  width: '100vw',\r\n  height: '100vh',\r\n  \r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  \r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n}\r\n\r\nconst shotGlassStyle = \r\n{\r\n  width: '75vh',\r\n  height: '75vh',\r\n}\r\n\r\nconst winnerLabelStyle = \r\n{\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  \r\n  textTransform: 'uppercase',\r\n  textAlign: 'center',\r\n  \r\n  fontFamily: 'leagueGothicFont',\r\n  fontSize: '6vh',\r\n  \r\n  transform: 'translate(-50%, -50%) translate(1vh, 3.5vh) rotate(-26deg)',\r\n  \r\n  color: 'white',\r\n  \r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  \r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  alignContent: 'center',\r\n  \r\n  width: '350px',\r\n  height: '10vh',\r\n}\r\n\r\nexport default ShotGlassScreen;","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport { AnimatedSwitch } from 'react-router-transition';\r\n\r\nimport './App.css';\r\n\r\nimport SplashScreen from './components/SplashScreen';\r\nimport SelectionScreen from './components/SelectionScreen';\r\nimport CardsScreen from './components/CardsScreen';\r\nimport PlayersSection from './components/PlayersSection';\r\nimport CardHighlightScreen from './components/CardHighlightScreen';\r\nimport FinalJeopardyScreen from './components/FinalJeopardyScreen';\r\nimport ShotGlassScreen from './components/ShotGlassScreen';\r\n\r\nfunction ID(){\r\n  \r\n  function chr4(){\r\n    return Math.random().toString(16).slice(-4);\r\n  }\r\n  \r\n  return chr4() + chr4() +\r\n    '-' + chr4() +\r\n    '-' + chr4() +\r\n    '-' + chr4() +\r\n    '-' + chr4() + chr4() + chr4();\r\n}\r\n\r\nclass App extends React.Component\r\n{\r\n  state = {\r\n    playerList: [\r\n      {\r\n        playerId: ID(),\r\n        playerName: 'Tup',\r\n        playerPoints: 0,\r\n      },\r\n      {\r\n        playerId: ID(),\r\n        playerName: 'Nikki',\r\n        playerPoints: 0,\r\n      },\r\n      {\r\n        playerId: ID(),\r\n        playerName: 'Tina',\r\n        playerPoints: 0,\r\n      },\r\n    ],\r\n    \r\n    currentCard: {\r\n      cardID: ID(),\r\n      answer: 'a joke',\r\n      question: 'what is \"my life?\"',\r\n      points: 100,\r\n      dailyDouble: false,\r\n      completed: false,\r\n      category: 'Sad Jokes',\r\n    },\r\n    \r\n    regularJeopardyData: [\r\n      {\r\n        categoryID: ID(),\r\n        category: \"TikTok Trends\",\r\n        cards: [\r\n          {\r\n            cardID: ID(),\r\n            answer: \"A dance challenge where you dance to a recently released song by Cardi B and Megan Thee Stallion.\",\r\n            question: 'What is the WAP Challenge?',\r\n            points: 100,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: 'The song used on tiktoks where families/friends try to recreate a photo from their childhood.',\r\n            question: 'What is \"I\\'m Just a Kid\" by Simple Plan?',\r\n            points: 200,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: \"A tiktok chain where people are impersonating Jimmy Neutron's asthmatic friend.\",\r\n            question: 'What is the Carl Wheezer chain?',\r\n            points: 300,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: 'A famous trend where cropped photos flying around the screen and fly into your body, matching your movements/pose. ',\r\n            question: 'What is the Buttercup challenge/Floating body parts challenge?',\r\n            points: 400,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: 'Challenge that makes use of the song lyrics \"I watch your eyes as she walks by\".',\r\n            question: 'What is the challenge where you try and move your eyes from left to right, or vice vera?',\r\n            points: 500,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        categoryID: ID(),\r\n        category: \"PH Bottled Alcohol\",\r\n        cards: [\r\n          {\r\n            cardID: ID(),\r\n            answer: 'Has a popular myth where the graphic on the bottle is a smiling version of the logo.',\r\n            question: 'What is Redhorse?',\r\n            points: 100,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: \"A popular drink for non-beer drinkers. It's made with vodka, ginger beer, and lime.\",\r\n            question: 'What is Smirnoff Mule?',\r\n            points: 200,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: 'This local craft beer brand features a moth/butterfly in its logo.',\r\n            question: 'What is Enkanto?',\r\n            points: 300,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: 'The rival of San Miguel Pale Pilsen, with a redundancy in its name that is supposedly an emphasis on how good the beer is.',\r\n            question: 'What is Beer na Beer Pale Pilsen?',\r\n            points: 400,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: \"San Miguel's version of the full-bodied dark lager beer.\",\r\n            question: \"What is Cerveza Negra?\",\r\n            points: 500,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        categoryID: ID(),\r\n        category: \"Katipunan Bars\",\r\n        cards: [\r\n          {\r\n            cardID: ID(),\r\n            answer: \"This music bar that holds live music performances held an online farewell show last September 12, 2020.\",\r\n            question: 'What is Route 196?',\r\n            points: 100,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: \"They have a different promo every day, such as margarita mondays and weng weng wednesdays.\",\r\n            question: \"What is Taco Joe's?\",\r\n            points: 200,\r\n            dailyDouble: true,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: \"It's name is a literal description of the place, on top of the CCA building.\",\r\n            question: 'What is Rooftop?',\r\n            points: 300,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: 'With the tagline \"Metro Manila\\'s island getaway,\" this is a bar that moved from Katipunan to Poblacion.',\r\n            question: 'What is Tortuga?',\r\n            points: 400,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: \"Actually a restaurant, that turns into a bar for the Katipunan youngins at night.\",\r\n            question: 'What is Exile?',\r\n            points: 500,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n        ]\r\n      },\r\n    ],\r\n    \r\n    doubleJeopardyData: [\r\n      {\r\n        categoryID: ID(),\r\n        category: \"PS4 Exclusives\",\r\n        cards: [\r\n          {\r\n            cardID: ID(),\r\n            answer: \"A remake of a classic game featuring a guy of few words and his unrealistically huge sword.\",\r\n            question: 'What is FFVII Remake?',\r\n            points: 200,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: 'Interactive horror and drama game, with an incredible cast of actors, such as “save the cheerleader, save the world,” and Mr. Robot.',\r\n            question: \"What is Until Dawn?\",\r\n            points: 400,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: 'A game released only last June 2020, which, although, received high praise from the general public and critics, had people on the internet critic it for including LGBT themes and an “unrealistic” female physique.',\r\n            question: \"What is  Last of Us Part 2?\",\r\n            points: 600,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: 'The 4th main entry to a Sony exclusive series, revolving around a former treasure hunter named Nathan “Rihanna\\'s ex”.',\r\n            question: \"What is Uncharted 4?\",\r\n            points: 800,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: \"No, this is not Dark Souls.\",\r\n            question: \"What is Bloodborne?\",\r\n            points: 1000,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        categoryID: ID(),\r\n        category: \"Just Fiel Tingz\",\r\n        cards: [\r\n          {\r\n            cardID: ID(),\r\n            answer: \"Fiel’s most played game series.\",\r\n            question: \"What is Tekken?\",\r\n            points: 200,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: \"Fiel’s least fave color.\",\r\n            question: \"What is Green?\",\r\n            points: 400,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: \"Fiel’s favorite article of clothing.\",\r\n            question: \"What are Sweaters?\",\r\n            points: 600,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: \"What Fiel was doing when he caused himself to get a minor fracture in his wrist.\",\r\n            question: \"What is playing basketball/american football?\",\r\n            points: 800,\r\n            dailyDouble: true,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: \"The duration of Fiel's 1st relationship.\",\r\n            question: \"What is 3 weeks?\",\r\n            points: 1000,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        categoryID: ID(),\r\n        category: \"Best Girls\",\r\n        cards: [\r\n          {\r\n            cardID: ID(),\r\n            answer: \"The MJ to the current Spider-Man.\",\r\n            question: \"Who is Zendaya?\",\r\n            points: 200,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: \"Has a chart topping song about a gadget used to prevent oneself from getting drenched in the rain.\",\r\n            question: \"Who is Rihanna?\",\r\n            points: 400,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: \"Singer youtuber known for her zelda inspired username and heavy bangs.\",\r\n            question: \"Who is Christina Grimmie?\",\r\n            points: 600,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: \"Irish American actress who is known from movies such as Little Women and Lady Bird, and is a close friend to Timothée Chalamet.\",\r\n            question: \"Who is Saoirse Ronan?\",\r\n            points: 800,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n          {\r\n            cardID: ID(),\r\n            answer: \"Canadian Comedian who has a show on Netflix titled Feel Good, about a gay comedian and her relationship with a closeted girl.\",\r\n            question: \"Who is Mae Martin?\",\r\n            points: 1000,\r\n            dailyDouble: false,\r\n            completed: false,\r\n          },\r\n        ]\r\n      },\r\n    ],\r\n    \r\n    finalCard: {\r\n      cardID: ID(),\r\n      answer: 'The color of a carrot.',\r\n      question: 'What is \"it\\'s a carrot\"?',\r\n      points: 0,\r\n      dailyDouble: false,\r\n      completed: false,\r\n      category: 'Final Jeopardy',\r\n    },\r\n  }\r\n  \r\n  setCurrentCard = (cardData, category) => {\r\n    \r\n    const { stateCopy } = this.state;\r\n    this.setState({\r\n      ...stateCopy,\r\n      currentCard: {...cardData, category}\r\n    });\r\n  }\r\n\r\n  setCurrentCardRevealed = () => \r\n  {\r\n    const cardID = this.state.currentCard.cardID;\r\n    \r\n    const { stateCopy } = this.state;\r\n    \r\n    const regularJeopardyDataCopy = this.state.regularJeopardyData;\r\n    const doubleJeopardyDataCopy = this.state.doubleJeopardyData;\r\n    \r\n    for(var i = 0; i < regularJeopardyDataCopy.length; i++)\r\n    {\r\n      for(var j = 0; j < regularJeopardyDataCopy[i].cards.length; j++)\r\n      {\r\n        if(regularJeopardyDataCopy[i].cards[j].cardID === cardID)\r\n        {\r\n          regularJeopardyDataCopy[i].cards[j].completed = true;\r\n        }\r\n      }\r\n    }\r\n    \r\n    for(var i = 0; i < doubleJeopardyDataCopy.length; i++)\r\n    {\r\n      for(var j = 0; j < doubleJeopardyDataCopy[i].cards.length; j++)\r\n      {\r\n        if(doubleJeopardyDataCopy[i].cards[j].cardID === cardID)\r\n        {\r\n          doubleJeopardyDataCopy[i].cards[j].completed = true;\r\n        }\r\n      }\r\n    }\r\n    \r\n    this.setState({\r\n      ...stateCopy,\r\n      regularJeopardyData: regularJeopardyDataCopy,\r\n      doubleJeopardyData: doubleJeopardyDataCopy,\r\n    })\r\n    \r\n    console.log(\"Current card revealed!\");\r\n  }\r\n  \r\n  handleClick = (e) => {\r\n    console.log(\"Hello\");\r\n  };\r\n\r\n  updatePoints = (id, value) => {\r\n    \r\n    const newPlayerList = this.state.playerList.slice();\r\n    var newPoints = parseInt(value, 10);\r\n\r\n    console.log(newPlayerList);\r\n    \r\n    if(isNaN(newPoints))\r\n      newPoints = 0;\r\n    \r\n    if(!isNaN(newPoints))\r\n    {\r\n      var playerIndex = newPlayerList.findIndex(data => data.playerId === id);\r\n\r\n      console.log(newPlayerList[playerIndex]);\r\n    \r\n      newPlayerList[playerIndex].playerPoints = newPoints;\r\n\r\n      this.setState(\r\n      {\r\n        playerList: newPlayerList\r\n      })\r\n    }\r\n    \r\n  }\r\n\r\n  increasePoints = (id, subtract) => { \r\n    \r\n    if(this.state.currentCard !== null)\r\n    {\r\n      const newPlayerList = this.state.playerList.slice();\r\n\r\n      var playerIndex = newPlayerList.findIndex(data => data.playerId === id);\r\n\r\n      var multiplier = this.state.currentCard.dailyDouble ? 2 : 1;\r\n      \r\n      newPlayerList[playerIndex].playerPoints += (\r\n        subtract ? \r\n        (-this.state.currentCard.points * multiplier):\r\n        (this.state.currentCard.points * multiplier)\r\n      )\r\n\r\n      console.log(newPlayerList);\r\n\r\n      this.setState(\r\n      {\r\n        playerList: newPlayerList\r\n      })\r\n    }\r\n  }\r\n  \r\n  getCurrentWinner = () => {\r\n    \r\n    var currentWinner = this.state.playerList[0];\r\n    var currentPoints = -10000000;\r\n    \r\n    for(var i = 0; i < this.state.playerList.length; i++)\r\n    {\r\n      var data = this.state.playerList[i];\r\n      var playerPoints = data.playerPoints;\r\n      \r\n      if(playerPoints > currentPoints)\r\n      {\r\n        currentWinner = data.playerName;\r\n        currentPoints = playerPoints;\r\n      }\r\n    }\r\n    \r\n    return currentWinner;\r\n  }\r\n  \r\n  renderPlayers = () => {\r\n    \r\n    return (\r\n      <PlayersSection \r\n        playerList={this.state.playerList}\r\n        increasePoints={this.increasePoints}\r\n        updatePoints={this.updatePoints}\r\n      />\r\n    )\r\n  };\r\n\r\n  render()\r\n  {\r\n    return (\r\n   \r\n      <Router>\r\n      \r\n        <AnimatedSwitch\r\n          atEnter={{opacity:0}}\r\n          atLeave={{opacity:0}}\r\n          atActive={{opacity:1}}\r\n          className=\"switch-wrapper\"\r\n          >\r\n          \r\n          <Route exact path=\"/\">\r\n            <SplashScreen onClick={this.handleClick} /> \r\n          </Route>\r\n\r\n          <Route path=\"/jeopardy/selection\">\r\n            <div style={pageStyle} > \r\n              <SelectionScreen />  \r\n              {this.renderPlayers()}\r\n            </div>\r\n          </Route>\r\n\r\n          <Route path=\"/jeopardy/regular\">\r\n            <div style={pageStyle} > \r\n              <CardsScreen \r\n              jeopardyData={this.state.regularJeopardyData}\r\n              setCurrentCard={this.setCurrentCard}\r\n              />  \r\n              {this.renderPlayers()}\r\n            </div>\r\n          </Route>\r\n\r\n          <Route path=\"/jeopardy/double\">\r\n            <div style={pageStyle} > \r\n              <CardsScreen \r\n              jeopardyData={this.state.doubleJeopardyData}\r\n              setCurrentCard={this.setCurrentCard}\r\n              />  \r\n              {this.renderPlayers()}\r\n            </div>\r\n          </Route>\r\n\r\n          <Route path=\"/jeopardy/final\">\r\n            <div style={pageStyle} > \r\n              <CardHighlightScreen \r\n              currentCard={this.state.finalCard}\r\n              setCurrentCardRevealed={this.setCurrentCardRevealed}\r\n              />  \r\n              {this.renderPlayers()}\r\n            </div>\r\n          </Route>\r\n\r\n          <Route path=\"/jeopardy/card\">\r\n            <div style={pageStyle} > \r\n              <CardHighlightScreen \r\n              currentCard={this.state.currentCard}\r\n              setCurrentCardRevealed={this.setCurrentCardRevealed}\r\n              />  \r\n              {this.renderPlayers()}\r\n            </div>\r\n          </Route>\r\n\r\n          <Route path=\"/jeopardy/winner\">\r\n            <div style={pageStyle} > \r\n              <ShotGlassScreen \r\n                winner={this.getCurrentWinner()}\r\n              />\r\n            </div>\r\n          </Route>\r\n\r\n        </AnimatedSwitch>\r\n\r\n      </Router>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nconst pageStyle = \r\n{\r\n  height: '100vh',\r\n  display: 'flex',\r\n  flexDirection: 'column'\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}